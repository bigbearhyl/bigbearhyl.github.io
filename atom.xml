<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LのBlog</title>
  
  
  <link href="https://bigbearhyl.github.io/atom.xml" rel="self"/>
  
  <link href="https://bigbearhyl.github.io/"/>
  <updated>2023-09-23T16:43:48.195Z</updated>
  <id>https://bigbearhyl.github.io/</id>
  
  <author>
    <name>L</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>王道计网</title>
    <link href="https://bigbearhyl.github.io/posts/11976d48.html"/>
    <id>https://bigbearhyl.github.io/posts/11976d48.html</id>
    <published>2023-09-23T16:35:16.000Z</published>
    <updated>2023-09-23T16:43:48.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【王道考研】计算机网络知识点"><a href="#【王道考研】计算机网络知识点" class="headerlink" title="【王道考研】计算机网络知识点"></a>【王道考研】计算机网络知识点</h2><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><h4 id="计算机网络基本知识"><a href="#计算机网络基本知识" class="headerlink" title="计算机网络基本知识"></a>计算机网络基本知识</h4><p><strong>计算机网络的概念</strong><br>：是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。计算机网络是互连的、自治的计算机集合。</p><p><strong>计算机网络的功能：</strong></p><pre><code>1. 数据通信（连通性）2. 资源共享 硬件 软件 数据3. 分布式处理 多台计算机各自承担同一工作任务的不同部分 Hadoop平台4. 提高可靠性5. 负载均衡</code></pre><p>计算机网络的组成部分：硬件、软件、协议</p><p>计算机网络的工作方式：边缘部分（用户直接使用:C/S方式、P2P方式）、核心部分：为边缘部分服务</p><p>计算机网络的功能组成：通信子网（实现数据通信）、资源子网（实现资源共享/数据处理）</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/22797.png" alt=""></p><p><strong>计算机网络的分类</strong> ：</p><p>1.按分布范围：广域网（WAN）（交换技术）、城域网（MAN）、局域网（WAN）（广播技术）、个人区域网（PAN）</p><p>2.按使用者：公用网（中国电信等）、专用网（军队网等）</p><p>3.按交换技术：电路交换、报文交换、分组交换。</p><p>4.按拓扑结构：总线型、星型、环型、网状型（广域网）</p><p>5.按传输技术：广播式网络 共享公共通信信道、点对点网络 使用分组存储转发和路由选择机制</p><p><strong>总结</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/53969.png" alt=""></p><h4 id="标准化工作及相关组织"><a href="#标准化工作及相关组织" class="headerlink" title="标准化工作及相关组织"></a>标准化工作及相关组织</h4><p>标准化对计算机网络至关重要！要实现不同厂商的硬软件之间的相互连通，必须遵从统一的标准。</p><p><strong>标准的分类：</strong></p><p>法定标准：由权威机构指定的正式的、合法的标准 (OSI)</p><p>事实标准：某些公司的产品在竞争中占据了主流，时间长了，这些产品中的协议和技术就变成了标准 （TCP/IP）</p><p><strong>标准化工作</strong></p><p>RFC（Request For Comments）因特网标准的形式</p><p>RFC要上升为因特网正式标准的四个阶段：</p><p>1.因特网草案（这个阶段还不是RFC文档）</p><p>2.建议标准（从这个阶段开始成为RFC文档）</p><p>3.草案标准（IETF 、IAB介入）</p><p>4.因特网标准</p><p><strong>标准化工作的相关组织</strong></p><p>国际标准化组织ISO:OSI参考模型、HDLC协议</p><p>国际电信联盟ITU:指定通信规则</p><p>国际电气电子工程师协会IEEE 学术机构、IEEE802系列标准、5G</p><p>internet工程任务组IETF(负责因特网相关标准的制定、RFC)</p><p><strong>总结</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/35005.png" alt=""></p><h4 id="速率相关的性能指标"><a href="#速率相关的性能指标" class="headerlink" title="速率相关的性能指标"></a>速率相关的性能指标</h4><p><strong>速率</strong> ：数据率或称数据传输率或比特率。连接在计算机网络上的主机在数字信道上传送数据位数的速率。单位：b/s kb/s Mb/s…</p><p>比特：1/0 位</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/59844.png" alt=""></p><p><strong>带宽</strong></p><p>“带宽”原本指某个信号具有的频带宽度，即最高频率与最低频率之差，单位是赫兹(Hz)。<br>计算机网络中，带宽用来表示网络的通信线路传送数据的能力，通常是指单位时间内从网络中的某一点到另一点所能通过的“ <strong>最高数据率”</strong><br>。单位是“比特每秒”，b/s， kb/s， Mb/s，Gb/s。 <strong>网络设备所支持的最高速率</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/90135.png" alt=""></p><p><strong>吞吐量</strong></p><p>表示在单位时间内通过某个网络（或信道、接口）的数据量，单位 b/s Kb/s Mb/s等。</p><p>吞吐量受网络的带宽或网络的额定速率的限制。</p><h4 id="性能指标之时延、延时带宽积、RTT、利用率"><a href="#性能指标之时延、延时带宽积、RTT、利用率" class="headerlink" title="性能指标之时延、延时带宽积、RTT、利用率"></a>性能指标之时延、延时带宽积、RTT、利用率</h4><p><strong>时延</strong> ：指数据(报文/分组/比特流)从网络(或链路)的一端传送到另一端所需的时间。也叫 <strong>延迟</strong> 或 <strong>迟延</strong> 。单位是s。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/91695.png" alt=""></p><p><strong>时延带宽积</strong></p><p>时延带宽积=传播时延*带宽</p><p>时延带宽积又称为 <strong>以比特为单位的链路长度</strong> 。即某段链路现在有多少比特。容量</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/57436.png" alt=""></p><p><strong>往返时延RTT</strong></p><p>从发送方发送数据开始，到发送方收到接收方的确认(接收方收到数据后立即发送确认)，总共经历的时延。</p><p>RTT越大，在收到确认之前，可以发送的数据越多。</p><p>RTT包括：</p><p>往返传播时延=传播时延*2</p><p>末端处理时间</p><p><strong>利用率</strong></p><p>信道利用率（有数据通过时间）/（有+无）数据通过时间 （利用率越大时延越大）</p><p>网络利用率：信道利用率加权平均值</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/68765.png" alt=""></p><h4 id="分层结构、协议、接口、服务"><a href="#分层结构、协议、接口、服务" class="headerlink" title="分层结构、协议、接口、服务"></a>分层结构、协议、接口、服务</h4><p><strong>分层的基本原则</strong></p><p>1.各层之间相互 <strong>独立</strong> ，每层只实现一种相对独立的功能。<br>2.每层之间 <strong>界面自然清晰</strong> ，易于理解，相互交流尽可能少。<br>3.结构上可分割开。每层都采用 <strong>最合适的技术</strong> 来实现。<br>4.保持下层对上层的独立性。 <strong>上层单向使用下层提供的服务</strong> 。<br>5.整个分层结构应该能促进标准化工作。</p><p><strong>发送文件之前要完成的工作：</strong></p><p>1.发起通信的计算机必须将数据通信的通路进行激活。<br>2.要告诉网络如何识别目的主机。<br>3.发起通信的计算机要查明目的主机是否开机，并且与网络连接正常。<br>4.发起通信的计算机要弄清楚，对方计算机中文件管理程序是否已经做好准备工作。<br>5.确保差错和意外可以解决。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/31089.png" alt=""></p><p><strong>概念总结</strong></p><p>网络体系结构是从 <strong>功能</strong> 上描述计算机网络结构。</p><p>计算机网络体系结构简称网络体系结构是 <strong>分层结构。</strong></p><p>每层遵循某个/些 <strong>网络协议</strong> 以完成本层功能。</p><p>计算机网络体系结构是计算机网络的 <strong>各层及其协议</strong> 的集合。</p><p>第n层在向第n+1层提供服务时，此服务不仅包含第n层本身的功能，还包含由下层服务提供的功能</p><p>仅仅在 <strong>相邻层之间有接</strong> 口，且所提供服务的具体实现细节对上一层是完全屏蔽的。</p><p>体系结构是 <strong>抽象</strong> 的，而实现是指能运行的一些软件和硬件。</p><h4 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h4><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/78276.png" alt=""></p><p>七层结构</p><p><strong>OSI参考模型解释通信过程</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/75904.png" alt=""></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/99563.png" alt=""></p><p>具体</p><p><strong>应用层（用户与网络的界面）</strong></p><p>所有能和用户交互产生网络流量的程序</p><p>典型的应用层服务：</p><p>文件传输（FTP）、电子邮箱（SMTP）、万维网（HTTP）</p><p><strong>表示层</strong></p><p>用于处理在两个通信系统中交换信息的表示方式（语法和语义）</p><p>功能：</p><p>数据格式变换（翻译官）</p><p>数据加密和解密</p><p>数据的压缩和恢复</p><p><strong>会话层</strong></p><p>向表示层实体/用户进程提供 <strong>建立连接</strong> 并在连接上 <strong>有序</strong> 地 <strong>传输</strong> 数据。这是会话，也叫建立同步（SYN）</p><p>功能：</p><p>建立、管理、终止会话</p><p>使用校验点可使会话在通信失败时从校验点/同步点继续恢复通信，实现数据同步。（适用于传输大文件）</p><p><strong>传输层</strong></p><p>负责主机中 <strong>两个进程</strong> 的通信，即 <strong>端到端</strong> 的通信。传输单位是报文段或者用户数据报。</p><p>功能</p><p>可靠传输（确认机制）、不可靠传输（传了就不管了）</p><p>差错控制 校验码等</p><p>流量控制 速度控制</p><p>复用（多个应用层进程可以同时使用下面运输层的服务）分用（运输层把收到的信息分别交付给上面应用层中响应的进程）</p><p><strong>网络层</strong></p><p>主要任务是把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务。</p><p>网络层传输的单位是数据报（数据报是分组的“爸爸”）</p><p>功能</p><p>路由选择 最佳路径</p><p>流量控制 速度控制</p><p>差错控制 校验码等</p><p>拥塞控制 若所有结点都来不及接受分组，而要丢弃大量分组的话，网络就处于拥塞状态。因此要采取一定措施,缓解这种拥塞。</p><p><strong>数据链路层</strong></p><p>主要任务是把网络层传下来的数据报 <strong>组装成帧</strong></p><p>数据链路层/链路层的传输单位是 <strong>帧</strong></p><p>功能</p><p>成帧（定义帧的开始和结束）</p><p>差错控制 帧错和位错</p><p>流量控制</p><p>访问（接入）控制 控制对信道的访问</p><p><strong>物理层</strong></p><p>主要任务是在物理媒体上实现比特流的透明传输</p><p>物理层传输单位是比特。</p><p><strong>透明传输</strong> :指不管所传数据是什么样的比特组合,都应当能够在链路上传送。</p><p>功能</p><p>定义接口特性</p><p>定义传输模式 单工 半双工 双工</p><p>定义传输速率</p><p>比特同步</p><p>比特编码</p><p><strong>总结</strong></p><h4 id="TCP-IP模型-amp-五层参考模型"><a href="#TCP-IP模型-amp-五层参考模型" class="headerlink" title="TCP/IP模型&amp;五层参考模型"></a>TCP/IP模型&amp;五层参考模型</h4><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/99477.png" alt=""></p><p><strong>OSI参考模型与TCP/IP参考模型相同点</strong></p><p>1.都分层</p><p>2.基于独立的协议栈的概念</p><p>3.可以实现异构网络互联</p><p><strong>OSI参考模型与TCP/IP参考模型不同点</strong></p><p>1.OSI定义三点：服务、协议、接口</p><p>2.OSI先出现，参考模型先于协议发明，不偏向特定的协议</p><p>3.TCP/IP设计之处就考虑到异构网络互联问题，将ip作为重要层次。</p><p><strong>五层参考模型</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/44208.png" alt=""></p><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><h4 id="物理层的基本概念"><a href="#物理层的基本概念" class="headerlink" title="物理层的基本概念"></a>物理层的基本概念</h4><p>物理层解决如何在连接各种计算机的传输媒体上 <strong>传输数据比特流</strong> ，而不是具体的传输媒体。</p><p><strong>物理层的主要任务</strong> ：确定与传输媒体接口有关的一些特性（定义标准）</p><p>1.机械特性：定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚情况和排列情况。</p><p>2.电气特性：规定传输二进制位时，线路上信号的电压范围，阻抗匹配，传输速率和距离限制等。</p><p>3.功能特性：指明某条线上出现的某一 <strong>电平表示何种意义</strong> ，接口部件的信号线的用途。</p><p>4.规程特性：（过程特性）定义各条物理线路的工作规程和时序关系。</p><h4 id="典型的数据通信模型"><a href="#典型的数据通信模型" class="headerlink" title="典型的数据通信模型"></a>典型的数据通信模型</h4><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/06201.png" alt=""></p><p><strong>数据通信相关术语</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/56018.png" alt=""></p><p><strong>三种通信方式</strong></p><p>1.单工通道：只有一个方向的通信而没有反方向的交互。仅需要一条信道</p><p>2.半双工通道：通道的双方都可以发送或接收信息，但任何一方都不能同时发送和接收，需要双条信道</p><p>3.全双工通道：通信双方可以同时发送和接受信息，也需要双条信道。</p><p><strong>两种数据传输方式</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/12386.png" alt=""></p><h4 id="码元"><a href="#码元" class="headerlink" title="码元"></a>码元</h4><p>码元是指一个固定时长的信号波形（数字脉冲），代表不同的离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为k进制码元，而该时长称为码元宽度。当码元的离散状态有M个时（M&gt;2）,此时码元为M进制码元。</p><p>1码元可以携带多个比特的信息量，比如，在使用二进制编码时，只有两种不同的码元，一种代表0状态另一种代表1状态。</p><p><strong>速率</strong></p><p>速率也叫数据率，是指数据的 <strong>传输速率</strong> ，表示单位时间内传输的数据量。可以用 <strong>码元传输速率</strong> 和 <strong>信息传输速率</strong> 表示。</p><p><strong>码元传输速率</strong> :别名码元速率、波形速率、调制速率、符号速率等，它表示单位时间内数字通信系统所传输的码元个数（也可以称为脉冲个数或信号变化的次数）<br><strong>，单位是波特（Baud</strong> ）。一波特表示数字通信系统每秒传输一个码元。这里的码元也可以是多进制的，也可以是二进制的。但码元速率与进制数无关。</p><p><strong>信息传输速率</strong> ：别名信息速率，比特率等，表示单位时间内数字通信系统传输的二进制码元个数（即比特数），单位是比特/秒（b/s）</p><p>关系：若一个码元携带nbit的信息量，则M Baud的码元传输速率所对应的信息传输速率weiM * n bit/s</p><p><strong>带宽</strong> ：表示单位时间内从网络中的某一点到另一点所能通过的最高数据率，常用来表示网络的通信线路所能传输数据的能力。单位是b/s</p><h4 id="奈氏准则，香农定理"><a href="#奈氏准则，香农定理" class="headerlink" title="奈氏准则，香农定理"></a>奈氏准则，香农定理</h4><p><strong>失真</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/15216.png" alt=""></p><p><strong>失真的一种现象–码间串扰</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/23452.png" alt=""></p><p><strong>奈氏准则</strong> ：在理想低通（无噪声，带宽受限）条件下，为了避免码间串扰，极限码元传输速率为2W Baud ，W 是信道宽带，单位是Hz。</p><p>1.在任何信道中，码元传输的速率是有上限的。若传输速率超过此上限，就会出现严重的码间串扰问题，使接收端对码元的完全正确识别成为不可能。<br>2.信道的频带越宽(即能通过的信号高频分量越多)，就可以用更高的速率进行码元的有效传输。<br>3.奈氏准则给出了码元传输速率的限制，但并没有对信息传输速率给出限制。<br>4.由于码元的传输速率受奈氏准则的制约，所以要提高数据的传输速率，就必须设法使每个码元能携带更多个比特的信息量，这就需要采用多元制的调制方法。</p><p><strong>香农定理</strong></p><p><strong>噪声</strong><br>存在于所有的电子设备和通信信道中。由于噪声随机产生，它的瞬时值有时会很大，因此噪声会使接收端对码元的判决产生错误。但是噪声的影响是相对的，若信号较强，那么噪声影响相对较小。因此，<br><strong>信噪比</strong> 就很重要。<br><strong>信噪比=信号的平均功率/噪声的平均功率</strong> ，常记为S/N，并用分贝(dB) 作为度量单位，即:信噪比(dB) =10log1o(S/N)</p><p><strong>香农定理</strong> :在带宽受限且有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/70408.png%23pic_center" alt=""></p><p>1.信道的带宽或信道中的信噪比越大，则信息的极限传输速率就越高。<br>2.对一定的传输带宽和一-定的信噪比，信息传输速率的上限就确定了。<br>3.只要信息的传输速率低于信道的极限传输速率，就一定 能找到某种方法来实现无差错的传输。<br>4.香农定理得出的为极限信息传输速率，实际信道能达到的传输速率要比它低不少。<br>5.从香农定理可以看出，若信道带宽W或信噪比S/N没有上限(不可能)，那么信道的极限信息传输速率也就没有上限。</p><p><strong>总结</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/64793.png" alt=""></p><h4 id="编码-amp-调制"><a href="#编码-amp-调制" class="headerlink" title="编码&amp;调制"></a>编码&amp;调制</h4><p><strong>信道上传送的信号</strong></p><p><strong>基带信号： </strong>将数字信号1和0直接用两种不同的电压表示，再送到<strong> 数字信道</strong>上去传输( <strong>基带传输</strong><br>)来自信源的信号，像计算机输出的代表各种文字或图像文件的数据信号都属于基带信号。基带信号就是发出的直接表达了要传输的信息的信号，比如我们说话的声波就是基带信号。</p><p><strong>宽带信号： </strong>将基带信号进行调制后形成的频分复用<strong> 模拟信号</strong>，再传送到 <strong>模拟信道</strong><br>上去传输(宽带传输)。把基带信号经过载波调制后，把信号的频率范围搬移到较高的频段以便在信道中传输(即仅在一段频率范围内能够通过信道)。</p><p>在传输距离较近时，计算机网络采用基带传输方式(近距离衰减小，从而信号内容不易发生变化)<br>在传输距离较远时，计算机网络采用宽带传输方式(远距离衰减大，即使信号变化大也能最后过滤出来基带信号)</p><p><strong>数据变成数字信号就是编码</strong></p><p><strong>数字变成模拟信号就是调制</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/07997.png%23pic_center" alt=""></p><p><strong>数字数据编码为数字信号</strong></p><p><strong>1.非归零编码（高一低零）</strong></p><p>编码容易实现，但没有检错功能，且无法判断一一个码元的开始和结束，以至于收发双方 <strong>难以保持同步。</strong></p><p><strong>2.曼彻斯特编码</strong></p><p>将一个码元分成两个相等的间隔,前一个间隔为低电平后一个间隔为高电平表示码元1;码元0则正好相反。也可以采用相反的规定。该编码的特点是在每一个码元的中间出现电平跳变，位中间的跳变既作时钟信号(可用于同步)又作数据信号，但它所占的频带宽度是原始的基带宽度的两倍。每一个码元都被调成两个电平，所以数据传输速率只有调制速率的1/2</p><p><strong>3.差分曼彻斯特编码</strong></p><p><strong>同1异0</strong><br>常用于局域网传输，其规则是:<br>若码元为1，则前半个码元的电平与上一个码元的后半个码元的电平相同，若为0，则相反。该编码的特点是，在每个码元的中间，都有一次电平的跳转，可以实现自同步，且抗干扰性强于曼彻斯特编码。</p><p><strong>4.归零编码</strong></p><p>信号电平在一个码元之内都要恢复到零的这种编码成编码方式。</p><p><strong>5.反向不归零编码</strong></p><p>信号电平翻转表示0，信号电平不变表示1</p><p><strong>6.4B/5B编码</strong></p><p>比特流中插入额外的比特以打破一连串的0或1，就是用5个比特来编码4个比特的数据，之后再传给接收方，因此称为4B/5B。编码效<br>率为80%。</p><p><strong>数字数据调制为模拟信号</strong></p><p>数字数据调制技术在发送端将数字信号转换为模拟信号，而在接收端将模拟信号还原为数字信号，分别对应于调制解调器的 <strong>调制和解调</strong> 过程。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/25704.png" alt=""></p><p><strong>模拟数据编码为数字信号</strong></p><p>计算机内部处理的是二进制数据，处理的都是数字音频，所以需要将模拟音频通过采样、量化转换成有限个数字表示的离散序列( 即实现音频数字化)。</p><p>最典型的例子就是对音频信号进行编码的脉码调制(PCM)，在计算机应用中，能够达到最高保真水平的就是PCM编码，被广泛用于素材保存及音乐欣赏，CD、DVD以及我们常见的WAV文件中均有应用。它主要包括三步:抽样、量化、编码。</p><p>1.抽样:对模拟信号周期性扫描，把时间上连续的信号变成时间上离散的信号。为了使所得的离散信号能无失真地代表被抽样的模拟数据，要使用采样定理进行采样:<br><strong>f采样频率≥2f信号最高频率</strong> （ 不然会失真）</p><p>2.量化:把抽样取 得的电平幅值按照一定 的分级标度转化为对应的数字值，并取整数，这就把连续的电平幅值转换为离散的数字量。</p><p>3.编码:把量化的结果转换为与之对应的二进制编码。</p><p><strong>模拟数据调制为模拟信号</strong></p><p>为了实现传输的有效性，可能需要较高的频率。这种调制方式还可以使用频分复用技术，充分利用带宽资源。在电话机和本地交换机所传输的信号是采用模拟信号传输模拟数据的方式;模拟的声音数据是加载到模拟的载波信号中传输的。</p><h4 id="传输介质及分类"><a href="#传输介质及分类" class="headerlink" title="传输介质及分类"></a><strong>传输介质及分类</strong></h4><p>传输介质也称传输媒体/传输媒介，它就是数据传输系统中在发送设备和接收设备之间的 <strong>物理通路</strong> 。</p><p>传输媒体并不是物理层。传输媒体在物理层的下面，因为物理层是体系结构的第一层， <strong>因此有时称传输媒体为0层</strong><br>。在传输媒体中传输的是信号，但传输媒体并不知道所传输的信号代表什么意思。但物理层规定了电气特性，因此能够识别所传送的比特流。</p><p><strong>传输介质</strong></p><p><strong>导向性传输介质</strong> :电磁波被导向沿着固体媒介（铜线/光纤）传播等</p><ol><li><strong>双绞线</strong></li></ol><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/13011.png" alt=""></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/97852.png" alt=""></p><p>双绞线是古老、又最常用的传输介质，它由 <strong>两根</strong> 采用一定规则并排 <strong>绞合</strong> 的、相互绝缘的 <strong>铜导线</strong> 组成。</p><p><strong>绞合可以减少相邻导线的电磁干绕。</strong></p><p>为了进一步提高抗电磁干扰能力，可在双绞线的外面再加上一个由金属丝编织成的屏蔽层，这就是屏蔽双绞线(STP)，无屏蔽层的双绞线就称为非屏蔽双绞线(UTP) 。</p><p>双绞线价格 <strong>便宜</strong> ，是最常用的传输介质之一，在局域网和传统电话网中普遍使用。模拟传输和数字传输都可以使用双绞线，其通信距离<br><strong>一般为几公里到数十公里</strong> 。距离太远时，对于模拟传输，要用 <strong>放大器放大衰减的信号</strong> ;对于数字传输<strong>，要用中继器将失真的信号整形</strong>。</p><p><strong>2.同轴电缆</strong></p><p>同轴电缆由 <strong>导体铜质芯线、绝缘层、网状编织屏蔽层和塑料外层</strong> 构成。按特性阻抗数值的不同，通常将同轴电缆分为两类:<br>50Ω同轴电缆和75Ω同轴电缆。其中，50Ω同轴电缆主要用于传送基带数字信号，又称为 <strong>基带同轴电缆</strong> ，它在局域网中得到广泛应用;<br>75Ω同轴电缆主要用于传送宽带信号，又称为 <strong>宽带同轴电缆</strong> ，它主要用于有线电视系统。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/50015.png" alt=""></p><p><strong>同轴电缆vs双绞线</strong></p><p>由于外导体屏蔽层的作用，同轴电缆抗干扰特性比双绞线好，被广泛用于传输较高速率的数据，其传输距离更远，但价格较双绞线贵。</p><p><strong>3.光纤</strong></p><p>光纤通信就是利用光导纤维(简称光纤)传递 <strong>光脉冲</strong> 来进行通信。有光脉冲表示1，无光脉冲表示0。而可见光的频率大约是108MHz，因此光纤通信系统的<br><strong>带宽远远大于</strong> 目前其他各种传输媒体的带宽。</p><p>光纤在发送端有光源，可以采用发光二极管或半导体激光器，它们在电脉冲作用下能产生出光脉冲;在接收端用光电二极管做成光检测器，在检测到光脉冲时可还原出电脉冲。</p><p>光纤主要由 <strong>纤芯(实心的! )和包层构成</strong><br>，光波通过纤芯进行传导，包层较纤芯有较低的折射率。当光线从高折射率的介质射向低折射率的介质时，其折射角将大于入射角。因此，如果入射角足够大，就会出现<br><strong>全反射</strong> ，即光线碰到包层时候就会折射回纤芯、这个过程不断重复，光也就沿着光纤传输下去。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/48199.png" alt=""></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/59195.png" alt=""></p><p><strong>光纤的特点</strong></p><p>1.传输损耗小，中继距离长，对远距离传输特别经济。</p><p>2.抗雷电和电磁干扰性能好。</p><p>3.无串音干扰，保密性好，也不易被窃听或截取数据。</p><p>4.体积小，重量轻。</p><p><strong>非导向性传输介质</strong> ：自由空间：空气，海水等</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/84409.png" alt=""></p><h4 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h4><p><strong>中继器</strong></p><p><strong>诞生原因</strong> :由于存在损耗，在线路上传输的信号功率会逐渐衰减，衰减到一定程度时将造成信号失真，因此会导致接收错误。</p><p>中继器的功能:对信号进行再生和还原，对衰减的信号进行放大，保持与原数据相同，以增加信号传输的距离，延长网络的长度。（再生数据信号）</p><p>中继器的两端:两端的网络部分是网段，而不是子网，适用于完全相同的两类网络的互连，且两个网段速率要相同。</p><p>中继器只将任何电缆段上的数据发送到另一段电缆上，它仅作用于信号的电气部分，并不管数据中是否有错误数据或不适于网段的数据。<br>两端可连相同媒体，也可连不同媒体。</p><p>中继器两端的网段一定要是同一个协议。( 中继器不会存储转发)</p><p>5-4-3规则:网络标准中都对信号的延迟范围作了具体的规定，因而中继器只能在规定的范围内进行，否则会网络故障。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/57165.png%23pic_center" alt=""></p><p><strong>集线器（多口中继器）</strong></p><p><strong>集线器的功能:</strong>对信号进行再生放大转发，对衰减的信号进行放大，接着转发到其他所有(除输入端口外)处于工作状态的端口上，以增加信号传输的距离，延长网络的长度。不具备信号的定向传送能力，是一个共享式设备。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/16767.png" alt=""></p><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p><strong>数据链路层的功能</strong></p><p>数据链路层在物理层提供服务的基础上 <strong>向网络层提供服务</strong> ，其最基本的服务是将源自网络层来的数据可靠地传输到相邻节点的目标机网络层。其主要作用是<br><strong>加强物理层传输原始比特流的功能</strong> ，将物理层提供的可能出错的物理连接改造成为 <strong>逻辑上无差错的数据链路</strong> ，使之对网络层表现为一条无差错的链路。</p><p>功能一：为网络层提供服务。无确认无连接服务，有确认无连接服务，有确认有连接服务。（有连接一定有确定）</p><p>功能二：链路管理，即连接的建立、维持、释放（用于面向连接的服务）。</p><p>功能三：组帧</p><p>功能四：流量控制</p><p>功能五：差错控制（帧错/位错）</p><h4 id="封装成帧-透明传输"><a href="#封装成帧-透明传输" class="headerlink" title="封装成帧/透明传输"></a><strong>封装成帧/透明传输</strong></h4><p><strong>封装成帧</strong><br>就是在一段数据的前后部分添加首部和尾部，这样就构成了一个帧。接收端在收到物理层上交的比特流后，就能根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。</p><p>首部和尾部包含许多的控制信息，他们的一个重要作用: <strong>帧定界</strong> (确定帧的界限)。<br><strong>帧同步</strong> : <strong>接收方</strong> 应当能从接收到的二进制比特流中区分出帧的起始和终止。</p><p>组帧的四种方法：1.字符统计法2.字符（节）填充法3.零比特填充法4.违规编码法</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/89214.png" alt=""></p><p><strong>透明传输</strong></p><p><strong>透明传输</strong> 是指不管所传数据是什么样的比特组合，都应当能够在链路上传送。因此，链路层就“看不见”有什么妨碍数据传输的东西。<br>当所传数据中的比特组合恰巧与某一个控制信息完全一样时，<br>就必须采取适当的措施，使收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输是透明的。</p><p><strong>1.字符统计法</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/19107.png" alt=""></p><p><strong>2.字符填充法</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/88083.png" alt=""></p><p><strong>3.零比特填充法</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/85668.png" alt=""></p><p><strong>违规编码法</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/37192.png" alt=""></p><p>由于字节计数法中Count字段的脆弱性(其值若有差错将导致灾难性后果)及字符填充实现上的复杂性和不兼容性，目前较普遍使用的帧同步法是 <strong>比特填充法</strong> 和<br><strong>违规编码法。</strong></p><h4 id="差错控制（检错编码）"><a href="#差错控制（检错编码）" class="headerlink" title="差错控制（检错编码）"></a>差错控制（检错编码）</h4><p><strong>差错从何而来？</strong></p><p>概括来说，传输中的差错都是由于噪声引起的。<br><strong>全局性</strong> 由于线路本身电气特性所产生的 <strong>随机噪声(热噪声)</strong> ，是信道固有的，随机存在的。<br>解决办法:提高信噪比来减少或避免干扰。(对传感器下手)<br><strong>局部性</strong> 外界特定的短暂原因所造成的 <strong>冲击噪声</strong> ，是产生差错的主要原因。<br>解决办法:通常利用编码技术来解决。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/13312.png" alt=""></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/51126.png" alt=""></p><p>数据链路层编码和物理层的数据编码与调制 <strong>不同</strong> 。物理层编码针对的是 <strong>单个比特</strong><br>，解决传输过程中比特的同步等问题，如曼彻斯特编码。而数据链路层的编码针对的是 <strong>一组比特</strong><br>，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错。</p><p><strong>冗余码：</strong></p><p>在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化时，相应的冗余位也随之变化，使码字遵从不变的规则。接收端根据收到码字是否仍符合原规则，从而判断是否出错。</p><p><strong>奇偶校验码</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/64501.png" alt=""></p><p><strong>CRC循环冗余码</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/96125.png" alt=""></p><p><strong>接收端检错过程</strong><br>把收到的每一个帧都除以同样的除数，然后检查得到的余数R。<br>1.余数为0，判定这个帧没有差错，接受。<br>2.余数为不为0，判定这个帧有差错(无法确定到位)，丢弃。<br>FCS的生成以及接收端CRC检验都是由硬件实现，处理很迅速，因此不会延误数据的传输。</p><p>在数据链路层仅仅使用循环冗余检验CRC差错检测技术，只能做到对帧的无差错接收，即“凡是接收端数据链路层接受的帧，我们都能以非常接近于1的概率认为这些帧在传输过程中没有产生差错”。接收端丢弃的帧虽然曾收到了，但是最终还是因为有差错被丢弃。“凡是接收端数据链路层接收的帧均无差错”。</p><p>“可靠传输”:数据链路层发送端发送什么，接收端就收到什么。<br>链路层使用CRC检验，能够实现无比特差错的传输，但这还不是可靠传输。</p><p><strong>海明码</strong></p><p>海明码：发现双比特错，纠正单比特错。</p><p>工作原理：动一发而牵全身</p><p>工作流程：确定校验码位数r，确定校验码和数据的位置，求出校验码的值，检错并纠错。</p><h4 id="流量控制和可靠传输机制"><a href="#流量控制和可靠传输机制" class="headerlink" title="流量控制和可靠传输机制"></a>流量控制和可靠传输机制</h4><p><strong>较高的发送速度和较低的接收能力</strong> 的不匹配，会造成传输出错，因此流量控制也是数据链路层的一项重要工作。</p><p>数据链路层的流量控制是点对点的，而传输层的流量控制是端到端的。</p><p>数据链路层流量控制手段:接收方收不下就不回复确认。<br>传输层流量控制手段:接收端给发送端一个窗口公告。</p><p><strong>流量控制的方法</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/20701.png" alt=""></p><p>停止等待协议 发送窗口大小=1，接收窗口大小=1</p><p>后退N帧协议（GBN）发送窗口大小&gt;1 接收窗口大小=1</p><p>选择重传协议（SR）发送窗口大小&gt; 接收窗口大小&gt;1</p><p>可靠传输、滑动窗口、流量控制</p><p>可靠传输:发送端发啥，接收端收啥。<br>流量控制:控制发送速率，使接收方有足够的缓冲空间来接收每一个帧。</p><p>滑动窗口解决｛流量控制（收不下就不给确认，想发也发不了）可靠传输（发送方自动重传）｝</p><h4 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h4><p><strong>为啥要有停止等待协议？</strong></p><p>除了比特出差错，底层信道还会出现丢包问题。为了实现流量控制。</p><p>丢包：物理线路故障、设备故障、病毒攻击、路由信息错误等原因，会导致数据包的丢失。</p><p><strong>研究停等协议的前提</strong></p><p>虽然现在常用全双工通信方式，但为了讨论问题方便，仅考虑一方发送数据(发送方)，一方接收数据(接收方)。<br>因为是在讨论可靠传输的原理，所以并不考虑数据是在哪一个 层次上传送的。<br>“停止-等待”就是每发送完一个分组就停止发送，等待对方确认，在收到确认后再发送下一个分组。</p><p>停等协议应用情况：无差错情况和有差错情况</p><p><strong>停等协议无差错</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/11456.png" alt=""></p><p>每发送1个数据帧就停止并等待，因此用1bit来编号就够。</p><p><strong>停等协议有差错</strong></p><p><strong>数据帧丢失或检测到帧出错</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/10750.png" alt=""></p><p><strong>ACK丢失</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/01097.png" alt=""></p><p><strong>ACK迟到</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/32702.png" alt=""></p><p><strong>停等协议性能分析</strong></p><p>简单但是信道利用率太低</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/31564.png" alt=""></p><p>信道利用率</p><p>发送方在一个发送周期内，有效地发送数据所需要的时间占整个发送周期的比率。</p><h4 id="选择重传协议"><a href="#选择重传协议" class="headerlink" title="选择重传协议"></a>选择重传协议</h4><p>可不可以只重传出错的帧？</p><p>解决方法：设置单个确认，同时加大接受窗口，设置接收缓存，缓存乱序到达的帧。</p><p><strong>选择重传协议中的滑动窗口</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/79194.png" alt=""></p><p><strong>SR发送方必须响应的三件事</strong></p><p>1.上层的调用</p><p>从上层收到数据后，SR发送方检查下一个可用于该帧的序号，如果序号位于发送窗口内，则发送数据帧;否则就像GBN一样，要么将数据缓存，要么返回给上层之后再传输。</p><p>2.收到了一个ACK</p><p>如果收到ACK，加入该帧序号在窗口内，则SR发送方将那个被确认的帧标记为已接收。如果该帧序号是窗口的下界(最左边第一个窗口对应的序号)，则窗口向前移动到具有最小序号的未确认帧处。如果窗口移动了并且有序号在窗口内的未发送帧，则发送这些帧。</p><p>3.超时事件</p><p>每个帧都有自己的定时器。一个超时事件发生后只重传一个帧。</p><p><strong>SR接收方要做的事情</strong></p><p>SR接收方将确认一个正确接收的帧而不管其是否按序。失序的帧将被缓存，并返回给发送方一个该帧的确认帧[收谁确认谁]，直到所有帧(即序号更小的帧)皆被收到为止，这时才可以将一批帧按序交付给.上层，然后向前移动滑动窗口。</p><p><strong>滑动窗口的长度</strong></p><p>2的n-1次方</p><h4 id="ALOHA协议"><a href="#ALOHA协议" class="headerlink" title="ALOHA协议"></a>ALOHA协议</h4><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/84061.png" alt=""></p><p><strong>纯ALOHA协议</strong></p><p>纯ALOHA协议思想：不监听信道，不按时间槽发送。随机重发。想发就发。</p><p><strong>时隙ALOHA协议</strong></p><p>时隙ALOHA协议的思想:把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。控制想发就发的随意性</p><h4 id="CSMA协议"><a href="#CSMA协议" class="headerlink" title="CSMA协议"></a>CSMA协议</h4><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/23369.png" alt=""></p><p><img src="F:/baidupdf/csdn下载/CSDNoutput/王道考研计算机网络知识点-m0_46494737/35745.png" alt=""></p><h4 id="介质访问控制"><a href="#介质访问控制" class="headerlink" title="介质访问控制"></a><strong>介质访问控制</strong></h4><p><strong>信道划分介质访问控制协议：</strong></p><p>基于多路复用技术划分资源。</p><p>网络负载重：共享信道效率低，且公平。</p><p>网络负载轻：共享信道效率低。</p><p><strong>随机访问MAC协议：冲突</strong></p><p>用户根据意愿 <strong>随机</strong> 发送信息，发送信息时可独占信道带宽。<br>网络负载重:产生冲突开销<br>网络负载轻:共享信道效率高，单个结点可利用信道全部带宽</p><p><strong>轮询访问MAC协议/轮流协议/轮转访问MAC协议：</strong></p><p>既要不产生冲突，又要发送时占全部带宽。</p><p><strong>轮询协议</strong></p><p><strong>主结点轮流邀请从属结点发送数据。</strong></p><p>问题：1.轮训开销2.等待延迟3.单点故障</p><p><strong>令牌传递协议</strong></p><p>令牌：一个特殊格式的MAC控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个结点独占信。 <strong>令牌环网无碰撞</strong></p><p>每个结点都可以在一定的时间内（令牌持有时间）获得发送数据的权利，并不是无限制地持有令牌。</p><p>问题：</p><p>1.令牌开销。</p><p>2.等待延迟</p><p>3.单点故障</p><p>采用令牌传送方式的网络常用于负载较重，通信量较大的网络中。</p><h4 id="CSMA-CA协议"><a href="#CSMA-CA协议" class="headerlink" title="CSMA-CA协议"></a>CSMA-CA协议</h4><p><strong>载波监听多点接入\碰撞避免</strong></p><p>发送数据前，先检测信道是否是空闲的。</p><p>空闲则发出 <strong>RTS</strong> (request to send)，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息;信道忙则等待。</p><p>接收端收到RTS后，将响应 <strong>CTS</strong> 。</p><p>发送端收到CTS后，开始发送数据帧（同时 <strong>预约信道</strong> :发送方告知其他站点自己要传多久数据）。</p><p>接收端收到数据帧后。将用CRC来检验数据是否正确，正确则响应ACK帧。</p><p>发送方收到ACK就可以进行下一个数据帧的发送，若没有则一直重传至规定重发次数为止(采用 <strong>二进制指数退避算法</strong> 来确定随机的推迟时间)。</p><p><strong>1.预约信道</strong></p><p><strong>2.ACK帧</strong></p><p><strong>3.RTS/CTS帧（可选）</strong></p><h4 id="局域网基本概念和体系结构"><a href="#局域网基本概念和体系结构" class="headerlink" title="局域网基本概念和体系结构"></a>局域网基本概念和体系结构</h4><p><strong>局域网</strong></p><p>局域网简称LAN，是指在 <strong>某一区域内</strong> 由多台计算机互联成的计算机组，使用广播信道。</p><p>特点1：覆盖的地理范围较小，只在一个相对独立的局部范围内联，如一座或集中的建筑群内，</p><p>特点2：使用专门铺设的传输介质（双绞线，同轴电缆）进行联网，数据传输速率高（10MB/s-10Gb/s）</p><p>特点3：通信延迟时间短，误码率低，可靠性较高。</p><p>特点4：各站为平等关系，共享传输信道。</p><p>特点5:多采用分布式控制和广播式通信，能进行广播和组播。</p><p>决定局域网的主要要素为：网络拓扑， 传输介质与介质访问控制方法。</p><p><strong>局域网拓扑结构</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/15823.png" alt=""></p><p><strong>局域网传输介质</strong></p><p>局域网：有线局域网 常用介质：双绞线，同轴电缆，光纤</p><p>无线局域网：电磁波</p><p><strong>局域网的分类</strong> ：以太网。令牌环网，FDDI网，ATM网，无线局域网。</p><p><strong>MAC子层和LLC子层</strong></p><p>IEEE 802标准所描述的局域网参考模型只对应OSI参考模型的数据链路层和物理层，他将数据链路层划分为逻辑链路层LLC子层和介质访问控制MAC子层。</p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/42269.png" alt=""></p><p><strong>以太网</strong></p><p>以太网(Ethernet)指的是由Xerox公司创建并由Xerox、Intel<br>和DEC公司联合开发的基带总线局域网规范，是当今现有局域网采用的最通用的通信协议标准。以太网络使用CSMA/CD (载波监听多路访问及冲突检测)技术。</p><p>以太网在局域网各种技术中占统治性地位:<br>1.造价低廉(以太网网卡不到100块) ;<br>2.是应用最广泛的局域网技术;<br>3.比令牌环网、ATM网便宜，简单;<br>4.满足网络速率要求: 10Mb/s~10Gb/s.</p><p><strong>以太网提供无连接、不可靠的服务</strong></p><p>无连接:发送方和接收方之间无“握手过程”。<br>不可靠:不对发送方的数据帧 <strong>编号</strong> ，接收方不向发送方进行 <strong>确认</strong> ，差错帧直接丢弃，差错纠正由高层负责。<br><strong>以太网只实现无差错接收，不实现可靠传输。</strong></p><p><strong>10BASE-T以太网</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/50834.png" alt=""></p><p><strong>适配器和MAC地址</strong></p><p>计算机与外界有局域网的连通是通过通信适配器的。</p><p>网络接口板</p><p>网络接口卡NIC</p><p>now，不再使用单独网卡，适配器上装有处理器和存储器（RAM，ROM）</p><p>ROM上有计算机硬件地址MAC地址</p><p>在局域网中，硬件地址又称为物理地址，或MAC地址，（实际上是标识符）</p><p>MAC地址：每个适配器有一个全球唯一的48位二进制地址，前24位代表厂家（由IEEE规定），后24位厂家自己指定。常用6个十六进制数表示，如02-60-6e-5d-b1-c2</p><p><strong>高速以太网</strong></p><p><img src="/assets/王道考研计算机网络知识点-m0_46494737/03849.png" alt=""></p><h4 id="CSMA-CD协议"><a href="#CSMA-CD协议" class="headerlink" title="CSMA-CD协议"></a>CSMA-CD协议</h4><p>CS:载波侦听/监听，每一-个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。<br>MA:多点接入，表示许多计算机以多点接入的方式连接在一根总线上。 <strong>总线型网络</strong><br>CD:碰撞检测(冲突检测)，“ 边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。<br><strong>半双工网络</strong></p><h4 id="广域网"><a href="#广域网" class="headerlink" title="广域网"></a>广域网</h4><p>广域网(WAN, Wide Area<br>Network)，通常跨接很大的物理范围，所覆盖的范围从几十公里到几千公里，它能连接多个城市或国家，或横跨几个洲并能提供远距离通信，形成国际性的远程网络。<br>广域网的通信子网主要使用 <strong>分组交换</strong> 技术。广域网的通信子网可以利用公用分组交换网、卫星通信网和无线分组交换网，它将分布在不同地区的<br><strong>局域网或计算机系统</strong> 互连起来，达到 <strong>资源共享</strong> 的目的。如因特网( Internet)是世界范围内最大的广域网。</p><h4 id="PPP协议"><a href="#PPP协议" class="headerlink" title="PPP协议"></a>PPP协议</h4><p>点对点协议PPP ( Pointto-Point Protocol)是目前使用最广泛的数据链路层协议，用户使用拨号电话接入因特网时一般都使用PPP协议。</p><p>PPP协议应满足的要求</p><p>简单、封装成帧、透明传输、多种网络层协议、多种类型链路、差错检测、检测连接状态、最大传送单元、网络层地址协商</p><p><strong>PPP协议的三个组成部分</strong></p><p>1.一个将IP数据报封装到串行链路( 同步串行/异步串行)的方法。<br>2.链路控制协议LCP:建立并维护数据链路连接。身 份验证<br>3.网络控制协议NCP: PPP可 支持多种网络层协议，每个不同的网络层协议都要一个相应的NCP来配置，为网络层协议建立和配置逻辑连接。</p><h4 id="链路层扩展以太网"><a href="#链路层扩展以太网" class="headerlink" title="链路层扩展以太网"></a>链路层扩展以太网</h4><p>网桥根据MAC帧的目的地址对帧进行转发和过滤。当网桥收到一个帧时，并不向所有接口转发此帧，而是先检查此帧的目的地址，然后再确定将该帧转发到哪一个接口，或者是把它丢弃（过滤）。</p><p>网桥优点：</p><p>1.过滤通信量，增大吞吐量</p><p>2.扩大了物理范围</p><p>3.提高了可靠性</p><p>4.可互连不同物理层，不同MAC子层和不同速率的以太网。</p><p>-CD协议</p><p>CS:载波侦听/监听，每一-个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。<br>MA:多点接入，表示许多计算机以多点接入的方式连接在一根总线上。 <strong>总线型网络</strong><br>CD:碰撞检测(冲突检测)，“ 边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。<br><strong>半双工网络</strong></p><h4 id="广域网-1"><a href="#广域网-1" class="headerlink" title="广域网"></a>广域网</h4><p>广域网(WAN, Wide Area<br>Network)，通常跨接很大的物理范围，所覆盖的范围从几十公里到几千公里，它能连接多个城市或国家，或横跨几个洲并能提供远距离通信，形成国际性的远程网络。<br>广域网的通信子网主要使用 <strong>分组交换</strong> 技术。广域网的通信子网可以利用公用分组交换网、卫星通信网和无线分组交换网，它将分布在不同地区的<br><strong>局域网或计算机系统</strong> 互连起来，达到 <strong>资源共享</strong> 的目的。如因特网( Internet)是世界范围内最大的广域网。</p><h4 id="PPP协议-1"><a href="#PPP协议-1" class="headerlink" title="PPP协议"></a>PPP协议</h4><p>点对点协议PPP ( Pointto-Point Protocol)是目前使用最广泛的数据链路层协议，用户使用拨号电话接入因特网时一般都使用PPP协议。</p><p>PPP协议应满足的要求</p><p>简单、封装成帧、透明传输、多种网络层协议、多种类型链路、差错检测、检测连接状态、最大传送单元、网络层地址协商</p><p><strong>PPP协议的三个组成部分</strong></p><p>1.一个将IP数据报封装到串行链路( 同步串行/异步串行)的方法。<br>2.链路控制协议LCP:建立并维护数据链路连接。身 份验证<br>3.网络控制协议NCP: PPP可 支持多种网络层协议，每个不同的网络层协议都要一个相应的NCP来配置，为网络层协议建立和配置逻辑连接。</p><h4 id="链路层扩展以太网-1"><a href="#链路层扩展以太网-1" class="headerlink" title="链路层扩展以太网"></a>链路层扩展以太网</h4><p>网桥根据MAC帧的目的地址对帧进行转发和过滤。当网桥收到一个帧时，并不向所有接口转发此帧，而是先检查此帧的目的地址，然后再确定将该帧转发到哪一个接口，或者是把它丢弃（过滤）。</p><p>网桥优点：</p><p>1.过滤通信量，增大吞吐量</p><p>2.扩大了物理范围</p><p>3.提高了可靠性</p><p>4.可互连不同物理层，不同MAC子层和不同速率的以太网。</p><p>未完待续…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;【王道考研】计算机网络知识点&quot;&gt;&lt;a href=&quot;#【王道考研】计算机网络知识点&quot; class=&quot;headerlink&quot; title=&quot;【王道考研】计算机网络知识点&quot;&gt;&lt;/a&gt;【王道考研】计算机网络知识点&lt;/h2&gt;&lt;h3 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一</summary>
      
    
    
    
    <category term="计算机网络" scheme="https://bigbearhyl.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="王道" scheme="https://bigbearhyl.github.io/tags/%E7%8E%8B%E9%81%93/"/>
    
    <category term="计算机网络" scheme="https://bigbearhyl.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>C语言学习笔记</title>
    <link href="https://bigbearhyl.github.io/posts/13675369.html"/>
    <id>https://bigbearhyl.github.io/posts/13675369.html</id>
    <published>2023-09-23T15:24:13.000Z</published>
    <updated>2023-09-23T16:27:04.988Z</updated>
    
    <content type="html"><![CDATA[<p>C语言初阶手把手教零基础新手入门万字心得笔记</p><p><a href="https://blog.csdn.net/m0_63312733/category_11531484.html" title="C语言">C语言 专栏收录该内容 </a></p><p>前言</p><p>作者将把C语言的知识要点，学习心得以文章形式发表，由于作者目前还是一个菜鸟，难以避免错误和存在观点片面的时候，非常感谢读者指正！希望能在这里与大家共同进步，早日成为大牛！</p><p>本系列（初始C语言）只是简单介绍每个知识点、C语言的基础知识，意在使读者（还有自己）大概了解C语言。</p><hr><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>“日志”以及“写在最后”是我在同一天写的，如果想听“没用”的废话，那就翻到最后吧:)</p><p>这是我第一篇也是我热度最高的博客，虽然远不及大佬的博客，我会一直努力。它倾注了我作为初学者，虽只有浅薄知识但却拥有这个这个年纪最热血的情感。它粗糙不堪，许多同学耐着性子读它，也细心地发现了不少问题，非常感谢！同时我希望大家学习的时候也能一起修修补补它，虽然它只是块破布，但我一定会因为它是大佬们的垫脚石而感到开心。</p><p>我希望我的语言不要像专业书那样让人眼花缭乱，所以除了必要的专业词汇，我尽量以“人话”解释一些语法。</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>22/9/1：</p><ul><li>在函数版块新增了C语言输入和输出的两个函数，以及它常用的格式（oj题和考试可能会遇到的）。</li><li>修正了三（2）中存储单位换算，原来少了KB和MB。</li></ul><p>22/9/4:</p><ul><li>修正了打印函数中左右对齐的描述。</li></ul><p>22/10/3:</p><ul><li>增加了对const的理解叙述。</li></ul><h2 id="一、C语言是什么？"><a href="#一、C语言是什么？" class="headerlink" title="一、C语言是什么？"></a>一、C语言是什么？</h2><p>C语言是是一门经久不衰的计算机编程语言，万物始于C，学好C语言，能让我们为编程之路打下坚实基础。（我也不知道写什么，反正非常重要就对了）</p><h2 id="二、开发环境"><a href="#二、开发环境" class="headerlink" title="二、开发环境"></a>二、开发环境</h2><p>1.编译器</p><p>我们把计算机编程语言称之为高级语言，那什么是低级语言呢？</p><p>在中学物理我们知道：电子元件只能传达”开”或”闭”两种信息，所以电子元件（即晶体管）之间也只能用这两种方式通信。人们把”开”用1代替，把”闭”用0代替。电子计算机在初期时，只能识别0和1两种信号，所以那个时候只有科学家才能进行编程工作，这在那时候是十分困难的。</p><p>上面提到的0/1信号，正好为二进制提供了用武之地，所以我们把最基本的、计算机能够直接读取的语言称之为低级语言。</p><p>在这里，低级语言就是一串由0和1组成的东西，它转换成汇编语言，进而转换成高级语言，才被我们大多数人学习。</p><p>编译器的作用就是把上面的过程反过来，将我们人能看得懂、接近自然语言的、而且能写出来的高级语言转换成机器能够读懂的低级语言。</p><p>笔者最初使用的编译器是Ｄev C++，然后是Visual Studio<br>2019。我比较喜欢VS2019，因为它在我写代码的同时能用中文提醒我的错误，但有时候才vs不能通过的代码反而在Dev<br>C++里能通过，所以目前我以vs为主。</p><p>如果有同学刚接触C，我建议先使用Dev C++吧，熟悉一下编程环境，如果已经有一定基础了，直接上vs2019吧。</p><h2 id="三、初始C语言"><a href="#三、初始C语言" class="headerlink" title="三、初始C语言"></a>三、初始C语言</h2><h3 id="1-第一个C语言程序"><a href="#1-第一个C语言程序" class="headerlink" title="1.第一个C语言程序"></a>1.第一个C语言程序</h3><p>下面以Dev C++为例</p><p>（1）先新建源文件：文件-&gt;新建-&gt;源代码</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\01554.PNG" alt=""></p><p>（2）写预处理命令，写主函数，建立基本框架</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\06432.PNG" alt=""></p><p><strong>尖括号( &lt;&gt;)中的stdio.h叫标准输入输出函数，即standard input output.header</strong></p><p><strong>#include是一种预处理命令，它的作用是找到尖括号（或者英文双引号）中的文件，并将它包含到当前文件，被包含的文件中的文本将替换源代码文件（就是我们正在编写的东西）中的#include指令。</strong></p><p> <em>看到上面那段话是不是很懵呢，说白了：<br>&lt;&gt;里面的东西有我们等下写代码要用的东西，它所包含的代码会帮我们实现某些功能，它只是个名字，实际上它包含了不少代码。因为那某个功能我们接下来要用很多次，如果每次都把&lt;&gt;里面的东西打出来，就太麻烦了！而#include就用一行代码代替了这么多代码，是不是方便了许多？</em></p><p><strong>举个栗子</strong></p><p>如果接下来我们要用到从键盘输入或从屏幕输出，那我们就需要#include<stdio.h>来简化我们实现输入和输出功能的步骤。</p><p>这里说得有点啰嗦，我刚接触这个的时候很懵：为什么每个函数都要加上#include<stdio.h>呢？为什么啰嗦这么多呢：如果有初学者看到我的文章，那我希望他能懂:D</p><p>忘了说了，第二种主函数这种写法已经是远古版本了，最好写第一种。</p><p>一个程序/工程只能有一个主函数（ main（）），它是程序/工程的入口。注意main不要写成mian！！</p><h3 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h3><p>​<br>​    char//字符数据类型//就是不是数字的字符<br>​    short//短整型//就是数字小（绝对值）的整数，很少用<br>​    int //整型//就是整数<br>​    long//长整型//就是数字（绝对值）大的整数<br>​    long long//更长的整型//很少用<br>​    float//单精度浮点数//就是小数<br>​    double//双精度浮点数//小数位数多的小数</p><p>§ 为什么会出现这么多类型？</p><p>——因为我们现实生活中要用到整数，小数呀</p><p>§ 那为什么整数有int 和 short 还用long、long long，小数有float、double这么多种类呢？为啥不只用一种数据类型来表示呢？</p><p>——这个问题问得好（精神分裂ing）。单看英文字母和中文字符的复杂程度应该不难猜想：不同字符在计算机中所占大小是不同的，让我简要介绍计算机中的储存单位：最小的单位是bit，8bit<br>= 1Byte，1024Byte =<br>1KB，接着是MB，GB，TB等。bit（比特）是最小单位。这里说个题外话，不少人在办理宽带有这样的困惑：为什么我明明买的是200M宽带呀，为什么最高才十几二十兆每秒呢？原因是：运营商所宣传的200M宽带实际上是宽带接入的速率为200Mbps，这里的B指的是Byte（字节），换算下来200M宽带理论上峰速为25.6MB/s。这不重要，知道就好，让我们跳回来。事实上，不同数据类型在内存中所占大小是不一样的，如果用大小的盒子装蛋糕，蛋糕有大有小，难免造成空间的浪费，所以人们规定了不同的数据类型，以便空间被物尽其用。</p><p>在这里有一个很重要的思想，我称之为黑屋思想：把内存想象成一个个小黑屋，里面存放着我们想要存进的东西，也存着我们不能动的东西，当然也存着我们想取的东西。</p><h3 id="2-1-数据类型的长度"><a href="#2-1-数据类型的长度" class="headerlink" title="2.1 数据类型的长度"></a>2.1 数据类型的长度</h3><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\19270.png" alt=""></p><p>这里用sizeof()判断数据类型或者表达式长度的运算符，sizeof()不是函数，后面会介绍（好像也没什么介绍的= =）。</p><p>C语言规定sizeof(long long) &gt;= sizeof(long)，其他以此类推，上面的结果因编译器和操作平台而异。</p><h3 id="3-变量-amp-amp-常量"><a href="#3-变量-amp-amp-常量" class="headerlink" title="3. 变量 &amp;&amp; 常量"></a><strong>3. 变量 &amp;&amp; 常量</strong></h3><p>生活中的有些值是不变的（比如：圆周率，性别，身份证号码，血型等等）<br>有些值是可变的（比如：年龄，体重，薪资）。</p><h3 id="3-1-如何定义变量"><a href="#3-1-如何定义变量" class="headerlink" title="3.1 如何定义变量"></a>3.1 如何定义变量</h3><p>如 3.2.1图</p><p>格式如下：变量类型 （空格）变量名（自己起）；</p><p>最好初始化变量，避免脏数据影响后续调试，如 int a = 0；如果变量名有实际含义，最好用对应的英文（再不行就拼音，或英文简写）表示，后续也会明白。</p><h3 id="3-2-变量的分类"><a href="#3-2-变量的分类" class="headerlink" title="3.2 变量的分类"></a>3.2 变量的分类</h3><p><strong>1.局部变量 &amp;&amp; 全局变量</strong></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\01640.png" alt=""></p><p>顾名思义，全局变量就是整个工程都能用的，而局部变量只能在{}内部使用，这里的{}不仅限于主函数的大括号，在后面的循环或判断语句中的{}也同样适用。</p><p><strong>//如果</strong> 全局变量和局部变量名字一样呢？是谁起作用呢？</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\71909.png" alt=""></p><p>显然，在这里 <em>局部变量会覆盖掉同名的全局变量</em> 。</p><p>这里简要介绍printf(),scanf()函数，顾名思义，前者是打印，后者是扫描，读取（f是函数的意思），从键盘读取输入，它们是被包含在stdio.h头文件中的。gets()<br>&amp;&amp; puts()也用同样的功能，具体差异会在后续文章解释。</p><h3 id="3-3-变量的作用域和生命周期"><a href="#3-3-变量的作用域和生命周期" class="headerlink" title="3.3 变量的作用域和生命周期"></a>3.3 变量的作用域和生命周期</h3><p><strong>1.变量的作用域</strong></p><p>作用域（scope，这个词要记住，后面编译器报错可能会出现）是程序设计概念，通常来说，一段程序代码中所用到的名字并不总是有效/可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。</p><p>1. 局部变量的作用域是变量所在的局部范围。（就是大括号里边的变量 <strong>只能</strong> 在大括号里用）<br>2. 全局变量的作用域是整个工程。（就是大括号外边的变量 <strong>在哪都能用</strong> ）</p><p><strong>2.生命周期</strong></p><p>变量的生命周期指的是变量的创建到变量的销毁之间的一个时间段<br>1. 局部变量的生命周期是：进入作用域生命周期开始，出作用域生命周期结束。（大括号大括号！）<br>2. 全局变量的生命周期是：整个程序的生命周期。 （在哪都行！）</p><p>§ 看完了吗？用人话来说 <strong>作用域就是变量在哪能用，生命周期就是它啥时候产生，啥时候消失。</strong></p><h3 id="3-4常量"><a href="#3-4常量" class="headerlink" title="3.4常量"></a>3.4常量</h3><h4 id="1-字面常量"><a href="#1-字面常量" class="headerlink" title="1.字面常量"></a><strong>1.字面常量</strong></h4><p>是指可以用字符串表示的常量，包括整型常量，字符型常量，字符串常量，也可以是结构型的符号常量。</p><h4 id="2-const修饰的常变量"><a href="#2-const修饰的常变量" class="headerlink" title="2.const修饰的常变量"></a><strong>2.const修饰的常变量</strong></h4><p>首先来看没有被修饰的变量：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\97623.png" alt=""></p><p><strong>显然，未被修饰的变量的值是可以被改变的</strong></p><p>再来看被const修饰的变量</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\94848.png" alt=""></p><p>编译器告诉我们，a的值是不能改变的，也就是说，它是个常量，但不完全是，人们把它称为 <strong>常变量</strong><br>。原因是：用const修饰的变量只是在语法上将它作为常量，但它本质还是变量，了解即可。</p><hr><p>(新增于22/10/3)</p><p>关于“常变量”的理解：用 const 修饰的变量，无论是全局变量还是局部变量，生存周期都是程序从运行开始到运行结束，也就是说，使用 const<br>修饰过的局部变量有了「静态特性」。什么变量具有静态属性？我们知道全局变量是静态的，静态的生存周期就是程序运行的整个过程。但是一定要区分的是：用const修饰过的局部变量只是有了「静态特性」，并没有说它变成了「静态变量」。</p><p>之所以把const放在最后，是因为理解它的「静态特性」需要理解全局变量和局部变量。</p><h4 id="3-define定义的标识符常量"><a href="#3-define定义的标识符常量" class="headerlink" title="3.#define定义的标识符常量"></a>3.#define定义的标识符常量</h4><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\04734.png" alt=""></p><p>看图里的代码可以知道：格式：#define 常量名 值，在这里常量名和值之间不需要等号。</p><h4 id="4-枚举常量"><a href="#4-枚举常量" class="headerlink" title="4.枚举常量"></a>4.枚举常量</h4><p>​<br>​    #define MON  1<br>​    #define TUE  2<br>​    #define WED  3<br>​    #define THU  4<br>​    #define FRI  5<br>​    #define SAT  6<br>​    #define SUN  7</p><p>假设我们要用到星期一到星期五7个变量，如果用#define的方法定义变量，我们需要用7行代码，而使用enum（枚举）常量能用更少的代码表示相同的意思。</p><p>​<br>​    enum DAY<br>​    {<br>​          MON = 0, TUE, WED, THU, FRI, SAT, SUN<br>​    };</p><p>第一个枚举成员的默认值为整型的 0，（在这里我用 = 0来表示，实际上它被省略了）后续枚举成员的值在前一个成员上加 1，以此类推。</p><p>当然我们可以在定义时修改任意枚举成员的值：</p><p>​<br>​    enum DAY<br>​    {<br>​          MON = 1, TUE, WED = 100, THU, FRI, SAT, SUN<br>​    };</p><p>对于没有指定值的枚举元素，其值为前一元素加 1。在这里TUE = 2， THU = 101，以此类推。</p><p>枚举常量先介绍到这里，实际上初学者的后续项目中用得较少，至少我现在还没遇到过（大一期末）。</p><p>打印结果如下：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\20072.png" alt=""></p><h3 id="4-字符串-amp-amp-转义字符"><a href="#4-字符串-amp-amp-转义字符" class="headerlink" title="4.字符串 &amp;&amp; 转义字符"></a>4.字符串 &amp;&amp; 转义字符</h3><h3 id="4-1-字符串"><a href="#4-1-字符串" class="headerlink" title="4.1 字符串"></a>4.1 字符串</h3><p>​<br>​    “hello world!”</p><p>形如这样被双引号扩起来的一串字符称为字符串。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\75710.png" alt=""></p><p>在vs2019编译器中键入以上代码，按下f10键，依次点击调试-&gt;窗口-&gt;监视。结果如图。</p><p>我在定义数组时并未初始化数组大小，因为编译器会根据输入的内容判定数组大小。由监视窗口中的值和类型栏中可以看出，虽然显示的是相同的内容，但是由双引号引起的字符串多了一个’\0’，它在数组中是有实际大小的。由于人们要对字符串进行一系列的处理，但是我们不是每次都能知道一个文本中的字符个数，若要对处理它，很难保证不越界且不浪费内存，于是人们想到将’<br><strong>\0’当作字符串结束的标志</strong> （它是一个转义字符，后面会介绍），这样人们在处理字符串的时候就不必担心数组越界和未知长度的问题了。</p><p>接下来我们定义三个数组，arr1是一个字符串，arr2和arr3都是字符数组，它们的区别在于arr2没’\0’,而arr3有，这样的区别会带来怎样的影响呢？让我们打印一下。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\93202.png" alt=""></p><p>结果非常的amazing啊，中间怎么有个奇怪的东西？</p><p>我们先看一样的arr1和arr3，在监视窗口中，它们包含的成员完全相同，当然，我们可以认为字符数组加上’\0’就是一个字符串，那为什么没’\0’的字符数组arr2显示出来但没完全显示出来呢？上面我们提到,’\0’是字符串的结束标志（这里恰好证实了字符数组加上’\0’就是一个字符串这一猜想），打印函数只有碰到’\0’才会停下来，arr2数组里并不包含，所以机器就一直找呀找，找到别的小黑屋里去了，最终出现烫烫烫这样的乱码字符,以后你还会碰到锟斤拷（笑）。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\43515.png" alt=""></p><p>用一张图简要表示数组在内存中是如何被处理的。</p><h3 id="4-2-转义字符"><a href="#4-2-转义字符" class="headerlink" title="4.2 转义字符"></a>4.2 转义字符</h3><p>当我想打印路径c:\code\test.c，结果为什么不是想象中的样子呢？</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\23397.png" alt=""></p><p>这里就不得不提一下转义字符了。转义字符顾名思义就是转变意思。<br>下面看一些转义字符。</p><p>\’ 表示单引号’</p><p>\” 表示双引号”</p><p>\\表示一个反斜杠</p><p>\n表示换行</p><p>\r表示回车</p><p>\t表示水平制表符，相当于按下tab键，还有一些转义字符没有提及，因为刚开始用的很少</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\84657.png" alt=""></p><p>补充一下ASCII码表</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\81339.png" alt=""></p><p>简单来说，因为机器内存中只能存储二进制0和1，所以当我们想要使用各式各样的符号时，只要使用对应的ASCII码，编译器会将它们转换成二进制编码，进而被机器识别。现在请将0，a，A对应的ascii码值记住。</p><h3 id="5-判断-amp-amp-选择语句"><a href="#5-判断-amp-amp-选择语句" class="headerlink" title="5. 判断&amp;&amp;选择语句"></a>5. 判断&amp;&amp;选择语句</h3><p><strong>1. if语句</strong></p><p>从字面上看容易理解：如果怎样就执行，不怎样就不执行。格式如下：</p><p>​<br>​    if(判断条件)<br>​    {<br>​    执行内容<br>​    }</p><p>如果没有{}，if语句只执行紧跟它的第一个语句，因为”;”表示执行语句的终止。所以if语句和后面的各种语句，即使要执行的语句只有一句，也要加上花括号，以便以后更好地维护程序，也增加了程序的可读性。</p><p>人们规定判断结果为真的表达式的值为1，否则为0；</p><p><strong>2. if…else语句</strong></p><p>一个 <strong>if 语句</strong> 后可跟一个 <strong>else 语句</strong> ，else 语句在它之后的语句结果为假时执行。</p><p>​<br>​    #include<stdio.h><br>​    int main()<br>​    {<br>​        int n = 0;<br>​        if (n == 0)<br>​        {<br>​            printf(“hello\n”);<br>​        }<br>​        else<br>​        {<br>​            printf(“world\n”);<br>​        }<br>​        return 0;<br>​    }</p><p>显然，打印结果为hello。</p><p><strong>3.if…else if…else 语句</strong></p><p>一个 <strong>if</strong> 语句后可跟一个 <strong>else if…else</strong> 语句。</p><p>我把格式改成这样： <strong>if</strong>…( <strong>else if</strong> ) <em> n…( <strong>else</strong> ) </em> m</p><p><strong>n &gt;= 0 ，m = 0</strong>或 <strong>1</strong> ；</p><p>三个部分都最好加上花括号。</p><p>也就是说，else if可以没有，else也可以没有，但是else if有大于0个时，必须有else。且else必须在最后。这里的各个else<br>if互不干扰，只要条件符合，就执行语句后括号的内容，判断的变量必须与if括号中的一致。</p><p>​<br>​    int main()<br>​    {<br>​        int a = 1, b = 0;<br>​        if (a == 1)<br>​        {<br>​            printf(“a\n”);<br>​        }<br>​        else if (b == 0)  //这里改变了变量<br>​        {<br>​            printf(“b\n”);<br>​        }<br>​        else<br>​        {<br>​            printf(“no\n”);<br>​        }<br>​        return 0;<br>​    }</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\81658.png" alt=""></p><p>当然，if语句还可以嵌套，由于这是初始C，时间和篇幅有限，后面再介绍。</p><p><strong>4. switch 语句</strong></p><p>先来个小总结</p><p>(1) switch括号内的常量表达式，必须是一个整型或枚举类型(上面有提到)。</p><p>(2) case 语句可以有任意个,case 后跟一个对应switch括号内相同数据类型的值和一个冒号（前面需要一个空格）。</p><p>(3)<br>当case内的浴具语句执行完毕后，如果未遇到break，将会继续执行下一个语句，直到遇见break或直到switc语句终止。当然，break不是必要的。</p><p>(4) default语句 用于switch接收的常量或枚举类型都不等于上面case语句冒号后的常量或枚举常量，同样，default也不是必要的。</p><p>(5) case语句和default语句后最好加上花括号。</p><p>看着真麻烦，话不多说，上代码：（还是用截图吧，看得清楚些）</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\81359.png" alt=""></p><p>这里打印结果为0，1，2 ，是因为第一个case语句就像一个入口，如果没遇到break，程序将会一直执行。这里的入口位置是任意的。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\52103.png" alt=""></p><p>当我修改n的值以后，对于此时的n，入口发生改变了。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\47822.png" alt=""></p><p>当我再次修改变量n的值且加入default语句结果如上。因为上面的case语句中没有对应的入口，只能通过default进入switch语句。</p><p>当然，switch语句也可以嵌套。</p><h2 id="5-循环"><a href="#5-循环" class="headerlink" title="5. 循环"></a>5. 循环</h2><p>前面我们依次简要介绍了顺序结构、选择结构，接下来我们要介绍循环结构。</p><p>此处算是C的难度上升期，对于笔者而言，它大概是这样的：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\39631.png" alt=""></p><p>可能对大多数初学者并没有这么夸张，但笔者当初初学循环时，似乎因为走了一会神，之后的就懵懵懂懂，一知半解，在实验课束手无策，甚至一度怀疑自己的智商是否是编程这块料，如此恶性循环。好在经过我的恶补还有许多练习，使我稍微掌握了循环结构的使用。我从这里悟到一个编程学习者必须具备的素质，<br><strong>不要光听不做，不要眼高手低，动手实践才是真正学习编程！！</strong></p><p>在这里再插一句： <strong>当你遇到bug时，尽量先自己找bug，因为只有经历过痛苦才会刻骨铭心。</strong></p><h3 id="1-for循环"><a href="#1-for循环" class="headerlink" title="1. for循环"></a>1. for循环</h3><p>我相信读者比我更聪明，且看介绍。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\97665.png" alt=""></p><p>规范、易读的写法如上，也可以在for后的括号定义计数器变量。但有些编译器会报错。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\55282.png" alt=""></p><p>也可以这样写：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\49854.png" alt=""></p><p>计数器初始化在for循环外也可，计数器变化在花括号内也可，由上可知：for括号内的两个顿号是必须要写的的，且不论执行语句有多少，最好加上花括号。</p><p>在这里有个初学者经常犯的错误：计数器的位置。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\40215.png" alt=""></p><p>首先说一下机器执行for循环的顺序(常规结构)：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\34925.png" alt=""></p><p>也就是说，for后面括号内语句的执行并不是完全按顺序的。当我把计数器i++放在花括号内，且把它放在不是最后的位置，那它就不是最后执行的语句了，所以要让它作为计数器，就要把它放在最后。但是笔者认为这样的可读性不算好，也不是很美观，非必要情况下还是把计数器放在括号里吧。</p><p>计数器的地位举足轻重，如果没有它，条件判断的结果永为真，这将是一个死循环。并不是所有的死循环都是错误的，因为我们总有些事情需要机器一直执行，后面我们会用更简洁的形式实现死循环。只有当条件判断的结果为假时，循环才会停止。</p><p>for循环括号内的判断语句至少写一句，很多时候，我们要在for循环语句内添加判断语句，其实也可以将<br>判断语句写在上面的括号内，不过这样写还是可读性不是很好，也不算美观（至少对初学者是这样的），知道即可。</p><p>在这里强调一下 <strong>计数器初始化</strong> 的重要性：</p><p>我用两个相同的循环结构，是否能打印两组”1 2 3 4 5”呢？</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\62874.png" alt=""></p><p>从图上我们知道，只打印了一组，我们把第二个条件判断改一下：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\90240.png" alt=""></p><p>两个循环结构我都没有初始化计数器，当然，对于第一个循环实际上它已经在定义变量i时被初始化了。当程序走完第一个循环结构时，i的值为6（以为是5的同学再思考一下），所以第二个循环打印不出来值，因为6&gt;5，所以第二个循环根本进不去，于是程序终止。</p><p>解决它有两个办法：</p><p>（1）定义不同变量用于不同计数器，这样各个计数器之间就不会互相干扰了。</p><p>（2）每次使用计数器之前都初始化它，即使用规范格式。</p><p>这个小问题，每隔一段时间就会让我恼火一阵子，有时是真的找不出来错误，因为我不是每次写的格式都是一样的，所以说规范地写代码很重要啊！</p><h3 id="2-while循环"><a href="#2-while循环" class="headerlink" title="2. while循环"></a>2. while循环</h3><p>结构如下：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\47303.png" alt=""></p><p>计数器的位置同样会影响打印结果。</p><p>可以发现，while循环只不过是把条件判断留在了括号中，变量初始化和计数器放在了其他地方。</p><p>用法和注意点与for循环大致相同，区别在今后的博客中细说。</p><h3 id="3-do…while语句"><a href="#3-do…while语句" class="headerlink" title="3.do…while语句"></a>3.do…while语句</h3><p>目前不太需要，一般用在菜单选项的时候，到时候就知道了。</p><p>学校考试的要点：</p><p>​<br>​    int i = 0;<br>​    do<br>​    {<br>​       i++;<br>​    }while(…)</p><p>如果while括号中结果为假，do中的操作都是一定先执行的，也就是说do…while循环至少执行一次。</p><h3 id="6-函数"><a href="#6-函数" class="headerlink" title="6. 函数"></a>6. 函数</h3><p><strong>个人理解</strong></p><p>这里的函数不是数学中的函数，不太喜欢数学的同学先别关掉:D。在我看来，函数就像生活中的各种店铺，五金店，电器维修店，服装店……它们在我们生活中有着各自的作用。函数的作用就像一个个店铺，把各种具有不同功能的代码打包，就像店铺之间都隔着墙一样。这样的好处是<br><strong>简化代码</strong> 。试想各种店铺混在一起的场景，且结合笔者下面的解释，应该大致能理解函数的作用。</p><p>举个栗子</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\48513.png" alt=""></p><p>这里只是举一个十分简单的例子，我想说的是：某些功能实现起来并不难，但实际上往往需要多次使用该功能，由于懒是第一生产力（:D），于是函数诞生了。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\01028.png" alt=""></p><p>函数名括号内的东西就相当于店铺门，你往门里丢东西，它就会根据它对应的功能返回给你相应的东西。函数先介绍到这里，后续会详细讲。</p><hr><p>（新增于22/9/1）输入输出函数：</p><p>通过上面对众多语法的解释，我经常使用printf()函数来打印，其实以后如果遇到某些问题难以解决，通过“打印大法”经常能化险为夷，快速定位问题。（扯远了），现在列举几种C语言输入输出需要注意的方面和它们的常见用法。</p><p><strong>要点</strong> ：</p><ul><li><strong>必须包含头文件 <stdio.h></strong>。原因是：最初提到stdio，它是 <strong>标准输入输出。 why？</strong> 因为C语言没有内置输入输出函数，在最初期C语言流行的时候，很多公司都是自己写的输入输出函数，但是它们或多或少都有区别，这样某个公司写的软件或者接口可移植性就很差，于是有个叫“标准委员会”的就出来规定了输入输出标准。举一反三，无规矩不成方圆，各种“标准”也就成了语言内置的“库”了。（库在学习的过程中会渐渐理解它）</li><li>如果指定了类型，人必须按照双引号中的格式输入，那么机器也肯定会按照格式输出，详情如下。</li></ul><p><strong>常见用法</strong> ：</p><p>下面通过输入输出的几种组合解释：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\34887.png" alt=""></p><p>请注意：如果你现在不知道输入输出语句，那就先记住它的格式，双引号，逗号，括号什么的。</p><p>运行以上代码，会有一个光标在闪动，输入100，回车。代码中打印了三次，不同的是第二次，添加了一个换行符。其中输入语句中最后的是&amp;（取地址），现在只要记住输入要这个符号即可。</p><p>用其他的呢？</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\33710.png" alt=""></p><p>运行上述程序，输入6699回车，且不论打印的数字位置如何，它们却只有2位。原因是：可以把输入输出语句中的双引号以及它里面的东西翻译成“格式”，输入输出就是按格式走的，是强制的。</p><p>这个%多少d，“多少”代表宽度，你看即使我输入4个数字，那它也只读取前两个数字。下面两个数字位置不同的原因是：打印函数的宽度正数靠右，负数靠左。如果没有规定宽度，那么也就没有绝对的靠右靠左对齐可言，不过从左到右习惯来讲，不规定宽度默认是靠左的。请注意对齐是在有移动空间的前提下才会体现出来。就像后面两个打印函数，长度（绝对值）都是4，是大于读取的2位数字的长度的。</p><p>再来一个！</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\64331.png" alt=""></p><p>运行上面的程序，但是请注意打印的格式与要打印的变量的类型不符合，就这段代码而言，打印的是’A’和’B’的ASCII码（还记得a的ASCII码么？）。从格式上的强制性来说，规定打印的格式十分重要，不是说一定要类型符合，经常是灵活使用。比如有一些题比如就是要打印字符的ASCII值，那么直接以%d打印字符就ok；再比如可能要遍历A~Z，直接在循环65~106中用%c打印即可。</p><p>最后一个！</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\80573.png" alt=""></p><p>运行程序。这次打印的是一个浮点数，通过最后一个打印语句可以知道，%f默认打印的是<br>保留6位小数。而在百分号和f之间的’.2’就代表小数点后保留两位。经常会在写应用题的时候遇到保留xx位小数这样的要求。</p><p>在这里再次强调动手做的重要性，看得懂连入门都不算，当然动手也需要熟练~</p><h2 id="7-数组"><a href="#7-数组" class="headerlink" title="7. 数组"></a>7. 数组</h2><p>数组的 <strong>定义</strong> ：一组 <strong>相同类型</strong> 元素的集合</p><h4 id="1-一维数组"><a href="#1-一维数组" class="headerlink" title="1. 一维数组"></a>1. 一维数组</h4><p><strong>声明 &amp;&amp;初始化数组</strong></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\24468.png" alt=""></p><p>从左至右依次为数组数据类型，数组名，数组元素个数，数组元素。</p><p>在这里,”[ ]”内的数字可以不用写</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\19345.png" alt=""></p><p><strong>数组的下标</strong></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\12693.png" alt=""></p><p>即数组的下标是从0开始的，这点需要初学者下意识地在练习中成为肌肉记忆。</p><p><strong>数组的使用</strong></p><p>数组的使用，单看它的形式，也就[]内的数字可以变化，当我想把数组中的元素打印出来呢</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\82212.png" alt=""></p><p>在这里，i的区间为[0,10),是有直观意义的，它表示我们操作了数组中下标为0到9的每个元素。</p><p>更多知识点与细节将在后续发出~</p><h2 id="8-操作符"><a href="#8-操作符" class="headerlink" title="8. 操作符"></a>8. 操作符</h2><p>（简单介绍）</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\22002.png" alt=""></p><p>算数操作符和赋值操作符的前五个相信大家都知道，这里提一下位操作符’&amp;’，当我们每次使用scanf函数时，总是要在变量名前加上&amp;，&amp;变量a的意思是取变量a的地址，这是&amp;符号的作用之一。</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\89128.png" alt=""></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\86104.png" alt=""></p><p>这个操作符的意思是：当表达式一的结果为真，整个表达式结果就为表达式2，否则结果为表达式3。例如：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\08717.png" alt=""></p><p>逗号表达式的意思就是一个语句由N个被逗号分隔的子语句（实际上不能称之为语句）组成，那么这个语句的结果就为最后一个子语句的结果。例如：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\10567.png" alt=""></p><h2 id="9-常见关键字"><a href="#9-常见关键字" class="headerlink" title="9. 常见关键字"></a>9. 常见关键字</h2><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\75539.png" alt=""></p><p>关键字在此只介绍初学时重要、常见的几个。</p><h4 id="1-break"><a href="#1-break" class="headerlink" title="1. break"></a>1. break</h4><p>在switch选择语句使用的尤其多，其次是循环语句中。它的作用是一旦条件符合，就跳出整个循环or选择语句。例如：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\55248.png" alt=""></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\29160.png" alt=""></p><p>在这里唯一的不同是在a =<br>2后加了break，它的作用是阻止语句往下执行。也就是说，switch语句要么从入口一直执行完毕，要么从入口开始执行，直到遇到break终止。</p><p>循环例子如下：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\31395.png" alt=""></p><h4 id="2-continue"><a href="#2-continue" class="headerlink" title="2. continue"></a>2. continue</h4><p>它常用于循环语句中。它的作用是当符合条件时，continue后面的语句不再执行，跳出本次循环，再开始下一次循环。</p><p>例如：</p><p><img src="F:\baidupdf\csdn下载\CSDNoutput\C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\66320.png" alt=""></p><p>理解了break，continue自然不难理解。</p><p>当然，break和continue在不同情况下的差异会在后续详细讲。</p><h4 id="3-static"><a href="#3-static" class="headerlink" title="3. static"></a>3. static</h4><p>在C语言中：<br>static是用来修饰变量和函数的<br>(1). 修饰局部变量</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\16600.png" alt=""></p><p><img src="F:\baidupdf\csdn下载\CSDNoutput\C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\06428.png" alt=""></p><p>由第二次的结果来看，函数内的局部变量并没有像第一次一样，每次调用都是为变量i开辟内存空间，而是将变量i的值保存下来。</p><p><strong>故：<br>static修饰局部变量改变了变量的生命周期，让静态局部变量超出了作用域后依然存在，直到程序结束时，生命周期才结束。</strong></p><p>(2). 修饰全局变量</p><p>这个例子举起来有些麻烦，姑且让我说说吧：在实际项目中，一个工程中会有至少一个源文件（xxx.c）。当一个全局变量被static修饰，这个全局变量就只能在本源文件内使用，不能在其他源文件内使用。（此处忘记全局变量的同学往上翻^_^）</p><p>(3). 修饰函数</p><p>同上，一个函数被static修饰，这个函数就只能在本源文件内使用，不能在其他源文件内使用。</p><h1 id=""><a href="#" class="headerlink" title="#"></a>#</h1><h2 id="10-指针"><a href="#10-指针" class="headerlink" title="10. 指针"></a>10. 指针</h2><p>指针和内存管理是C语言的双刃剑。</p><p>由于这部分十分重要，所以这里我简要介绍有关指针的基础知识。</p><p><strong>1. 内存</strong></p><p>内存是电脑上特别重要的存储器，计算机中程序的运行都是在内存中进行的<br>。所以为了有效的使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是1个字节。为了能够有效的访问到内存的每个单元，就给内存单元进行了编号，这些编号被称为该内存单元的地址。</p><p>变量是创建内存中的（在内存中分配空间的），每个内存单元都有地址，所以变量也是有地址的。在前面我提到：*a = &amp;a，为什么呢？</p><p>对于等号右边，它表示的是变量a的地址，它也是一个具体的值，我得用房间给它住，所以人们规定定义int <em>a存放a的地址。 <strong>注意：</strong><br>**在定义指针变量时，</em>符号只是表示定义的是一个指针变量，而使用指针变量时<em>a中的</em>符号指的是机器通过存放的a的地址找到a的值。**</p><p><strong>1.1</strong> <strong>指针的简单使用</strong></p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\82487.png" alt=""></p><p>通过地址的存放，解引用，达到了赋值的目的。</p><h2 id="11-结构体"><a href="#11-结构体" class="headerlink" title="11. 结构体"></a>11. 结构体</h2><p>结构体是C语言中特别重要的知识点，结构体使得C语言有能力描述复杂类型。比如描述学生，学生包含：<br>名字+年龄+性别+学号这几项信息。这里只能使用结构体来描述了。直接上图：</p><p><img src="/assets/C语言初阶手把手教零基础新手入门万字心得笔记-m0_63312733\65549.png" alt=""></p><p>声明一个结构休类型的一般形式如下：</p><p>struct 结构体名</p><p>{成员列表};</p><p>这个结构体名在本工程中就是一个用户定义的数据类型了，就像int那样，不过需要注意的是，定义并初始化结构体时，成员的数据类型要于结构体声明时对应。</p><p>细心的同学会发现，我两次打印时，后面的一坨东西看起来不一样，但结果却完全一致。实际上这与指针有关，在后面也会详细讲。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C语言初阶手把手教零基础新手入门万字心得笔记&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/m0_63312733/category_11531484.html&quot; title=&quot;C语言&quot;&gt;C语言 专栏收录该内容 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前言&lt;/</summary>
      
    
    
    
    <category term="C语言学习" scheme="https://bigbearhyl.github.io/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="C语言" scheme="https://bigbearhyl.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://bigbearhyl.github.io/posts/4a17b156.html"/>
    <id>https://bigbearhyl.github.io/posts/4a17b156.html</id>
    <published>2023-08-26T12:46:27.709Z</published>
    <updated>2023-08-28T13:31:14.357Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言排序算法</title>
    <link href="https://bigbearhyl.github.io/posts/6c1d7907.html"/>
    <id>https://bigbearhyl.github.io/posts/6c1d7907.html</id>
    <published>2023-08-25T14:26:44.000Z</published>
    <updated>2023-08-30T03:22:54.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言排序算法"><a href="#C语言排序算法" class="headerlink" title="C语言排序算法"></a>C语言排序算法</h1><h2 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序算法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 每次遍历都将最大的数移动到末尾</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n-i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="comment">// 交换相邻两个数</span></span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">64</span>, <span class="number">34</span>, <span class="number">25</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">90</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用冒泡排序函数</span></span><br><span class="line">    bubbleSort(arr, n);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出排序后的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后的数组: \\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是冒泡排序算法的完整实现代码和运行结果：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">排序后的数组:</span><br><span class="line">11<span class="number"> 12 </span>22<span class="number"> 25 </span>34<span class="number"> 64 </span>90</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>冒泡排序算法的基本思想是将相邻两个数进行比较，如果前一个数大于后一个数，则交换这两个数的位置，这样一轮比较下来，最大的数就会被放到数组的末尾。然后再去对剩下的 n-1 个数进行比较，重复这个过程，直到所有的数都被排好序为止。</p><p>时间复杂度为 O(n^2)，适用于小规模数据的排序。</p><hr><h2 id="2-快速排序"><a href="#2-快速排序" class="headerlink" title="2.快速排序"></a>2.快速排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换数组中两个元素的位置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp = arr[i];</span><br><span class="line">    arr[i] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速排序算法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = left, j = right, pivot = arr[left];</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">        <span class="comment">// 当左右指针重合时，返回</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 左右指针分别向中间移动，找到需要交换的元素</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; arr[j] &gt;= pivot) &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; arr[i] &lt;= pivot) &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[j] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将枢轴元素放在正确位置，左边的元素小于等于枢轴，右边的元素大于枢轴</span></span><br><span class="line">    arr[i] = pivot;</span><br><span class="line">    <span class="comment">// 递归处理左右两部分</span></span><br><span class="line">    quickSort(arr, left, i<span class="number">-1</span>);</span><br><span class="line">    quickSort(arr, i+<span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">64</span>, <span class="number">34</span>, <span class="number">25</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">90</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用快速排序函数</span></span><br><span class="line">    quickSort(arr, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出排序后的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后的数组: \\\\\\\\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是快速排序算法的完整实现代码和运行结果：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">排序后的数组:</span><br><span class="line">11<span class="number"> 12 </span>22<span class="number"> 25 </span>34<span class="number"> 64 </span>90</span><br></pre></td></tr></table></figure><p>快速排序算法的基本思想是选择一个枢轴元素，将数组划分成左右两部分，左边的元素小于等于枢轴，右边的元素大于枢轴，然后分别对左右两部分进行递归排序。时间复杂度为 O(n\log n)，是一种高效的排序算法。</p>]]></content>
    
    
    <summary type="html">🥧本文汇总C语言各种排序算法</summary>
    
    
    
    <category term="数据结构" scheme="https://bigbearhyl.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C语言" scheme="https://bigbearhyl.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="排序" scheme="https://bigbearhyl.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="数据结构" scheme="https://bigbearhyl.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>个人使用一些网络连接</title>
    <link href="https://bigbearhyl.github.io/posts/66bc4e14.html"/>
    <id>https://bigbearhyl.github.io/posts/66bc4e14.html</id>
    <published>2023-08-23T14:33:28.000Z</published>
    <updated>2023-08-30T13:29:37.028Z</updated>
    
    <content type="html"><![CDATA[<h3 id="博客链接："><a href="#博客链接：" class="headerlink" title="博客链接："></a>博客链接：</h3><p><a href="bigbearhyl.github.io">个人博客</a></p><hr><h3 id="个人搭建无魔法也可使用的New-Bing"><a href="#个人搭建无魔法也可使用的New-Bing" class="headerlink" title="个人搭建无魔法也可使用的New Bing:"></a>个人搭建无魔法也可使用的New Bing:</h3><p><a href="https://hyljame-bing.hf.space">New Bing</a></p><h3 id="个人搭建的chatgpt3-5网站"><a href="#个人搭建的chatgpt3-5网站" class="headerlink" title="个人搭建的chatgpt3.5网站:"></a>个人搭建的chatgpt3.5网站:</h3><p><a href="https://chat-gpt-next-web2-pied-omega.vercel.app/">chatgpt(需要打开魔法)</a></p><h3 id="在线头像尺寸网站："><a href="#在线头像尺寸网站：" class="headerlink" title="在线头像尺寸网站："></a>在线头像尺寸网站：</h3><p><a href="https://tool.lu/favicon/">favicon制作 - 在线工具 (tool.lu)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;博客链接：&quot;&gt;&lt;a href=&quot;#博客链接：&quot; class=&quot;headerlink&quot; title=&quot;博客链接：&quot;&gt;&lt;/a&gt;博客链接：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;bigbearhyl.github.io&quot;&gt;个人博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;个</summary>
      
    
    
    
    <category term="个人使用的一些网络连接" scheme="https://bigbearhyl.github.io/categories/%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/"/>
    
    
    <category term="链接" scheme="https://bigbearhyl.github.io/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>makedown学习1</title>
    <link href="https://bigbearhyl.github.io/posts/d78eccf5.html"/>
    <id>https://bigbearhyl.github.io/posts/d78eccf5.html</id>
    <published>2023-08-23T13:52:55.000Z</published>
    <updated>2023-08-26T12:46:28.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Makedown基本语法"><a href="#Makedown基本语法" class="headerlink" title="Makedown基本语法"></a>Makedown基本语法</h2><h2 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h2><p><img src="https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png" alt=""></p><p>语法：![]+(<a href="https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png">https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png</a>)<br><span id="more"></span></p><h2 id="文字超链接"><a href="#文字超链接" class="headerlink" title="文字超链接"></a>文字超链接</h2><p>这是<a href="https://www.baidu.com">百度</a></p><p>语法:[百度]+(<a href="https://www.baidu.com">https://www.baidu.com</a>)</p><h3 id="文字内容"><a href="#文字内容" class="headerlink" title="文字内容"></a>文字内容</h3><p>文字内容直接输入</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>这个是三级标题 是###+空格+文字</p><p>这个是四级标题 是####+空格+文字</p><p>这个是五级标题 是#####+空格+文字</p><p>这个是六级标题 是######+ 空格+文字</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p><strong>hello word !!!</strong> 两边是**的为粗体</p><p><em>hello word !!!</em> 两边是*的为斜体</p><p><strong><em>hello word !!!</em></strong> 两边是<em>*</em>的为斜体加粗</p><p><del>hello word !!!</del> 两边是~~的为加上删除线</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr><p>—+空格是分割线</p><p><em>*</em>+空格也是分割线</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>1.第一项</p><p>2.第二项</p><p>3.第三项</p><p>语法：数字.加上文字</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>第一项</li><li>第二项</li></ul><p>语法： - 加上文字</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Makedown基本语法&quot;&gt;&lt;a href=&quot;#Makedown基本语法&quot; class=&quot;headerlink&quot; title=&quot;Makedown基本语法&quot;&gt;&lt;/a&gt;Makedown基本语法&lt;/h2&gt;&lt;h2 id=&quot;图片链接&quot;&gt;&lt;a href=&quot;#图片链接&quot; class=&quot;headerlink&quot; title=&quot;图片链接&quot;&gt;&lt;/a&gt;图片链接&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;语法：![]+(&lt;a href=&quot;https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png&quot;&gt;https://image-f2k.pages.dev/file/ec6f8ab8beb3ab937558e.png&lt;/a&gt;)&lt;br&gt;</summary>
    
    
    
    <category term="makedown" scheme="https://bigbearhyl.github.io/categories/makedown/"/>
    
    
    <category term="makedown" scheme="https://bigbearhyl.github.io/tags/makedown/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客配置问题记录</title>
    <link href="https://bigbearhyl.github.io/posts/576f5e77.html"/>
    <id>https://bigbearhyl.github.io/posts/576f5e77.html</id>
    <published>2023-08-23T13:01:26.000Z</published>
    <updated>2023-08-26T12:46:28.928Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h3 id="1-关于hexo更新到GitHub后博客内容未变问题"><a href="#1-关于hexo更新到GitHub后博客内容未变问题" class="headerlink" title="1.关于hexo更新到GitHub后博客内容未变问题"></a>1.关于hexo更新到GitHub后博客内容未变问题</h3><p>最开始更新完毕确认检查后，使用 <code>hexo d</code> 已经部署到了github，自己在github上也看到确实已经更新到了仓库，但是博客内容却一直没变。排除了是<strong>时间延迟</strong>问题的可能，于是又看了下GitHub的仓库，在右侧边栏发现了这个东西：</p><p><img src="https://image-f2k.pages.dev/file/4f67311684c6ca4b9c6a2.png" alt=""></p><p>然后查到了可能是分支问题，按照教学视频做的时候，根目录的 _config.yml 文件中deploy这一块是这样的：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  repo: git@github<span class="selector-class">.com</span>:W-alker/W-alker<span class="selector-class">.github</span><span class="selector-class">.io</span><span class="selector-class">.git</span></span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>这样做，意思是将hexo部署到了<strong>master分支</strong>。这才想起前段时间<strong>GitHub已经将仓库的默认分支改为了main</strong>，所以我的仓库里有两个分支，一个main一个master，而main才是“active”分支，博客页面所在的分支还是main分支。两个分支的内容截然不同，修改之后的博客代码文件更新在了master分支，而main分支保留的仍然是最开始未修改的文件。</p><p>也就是说，pages服务使用的是我的main分支生成的页面，而我需要生成页面的代码是在master分支里的。</p><p><strong>config.yml 文件中deploy这一块是改成：</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  repo: git@github<span class="selector-class">.com</span>:W-alker/W-alker<span class="selector-class">.github</span><span class="selector-class">.io</span><span class="selector-class">.git</span></span><br><span class="line">  branch: <span class="selector-tag">main</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置文件里的branch一项改成了main，然后 hexo clean hexo g hexo d 重新部署，之后博客果然更新了。</p><h3 id="总结：注意仓库分支。仓库最好是单分支，如果需要改到其他分支，记得将pages服务改到那个分支下。当然，你也可以直接将github的默认分支名重新改为master，这样能避免你同时部署到其他代码托管平台如gitee时又出现问题。"><a href="#总结：注意仓库分支。仓库最好是单分支，如果需要改到其他分支，记得将pages服务改到那个分支下。当然，你也可以直接将github的默认分支名重新改为master，这样能避免你同时部署到其他代码托管平台如gitee时又出现问题。" class="headerlink" title="总结：注意仓库分支。仓库最好是单分支，如果需要改到其他分支，记得将pages服务改到那个分支下。当然，你也可以直接将github的默认分支名重新改为master，这样能避免你同时部署到其他代码托管平台如gitee时又出现问题。"></a>总结：注意仓库分支。仓库最好是单分支，如果需要改到其他分支，记得将pages服务改到那个分支下。当然，你也可以直接将github的默认分支名重新改为master，这样能避免你同时部署到其他代码托管平台如gitee时又出现问题。</h3><h2 id="————————————————————————————"><a href="#————————————————————————————" class="headerlink" title="————————————————————————————"></a>————————————————————————————</h2><h3 id="2-hexo发生error：spawn-failed错误的解决方法"><a href="#2-hexo发生error：spawn-failed错误的解决方法" class="headerlink" title="2.hexo发生error：spawn failed错误的解决方法"></a>2.hexo发生error：spawn failed错误的解决方法</h3><p>运行 hexo d 命令后出现如下错误：</p><p><img src="https://image-f2k.pages.dev/file/77cf0b99d2ca9bb24716e.png" alt=""></p><h4 id="解决方式一："><a href="#解决方式一：" class="headerlink" title="解决方式一："></a>解决方式一：</h4><p>1.删除 <code>.deploy_git</code> 文件夹;<br>2.输入 <code>git config --global core.autocrlf false</code></p><p>3.然后，依次执行：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">hexo clean</span></span><br><span class="line"><span class="language-xml">hexo g</span></span><br><span class="line"><span class="language-xml">hexo d</span></span><br></pre></td></tr></table></figure><h4 id="解决方式二："><a href="#解决方式二：" class="headerlink" title="解决方式二："></a>解决方式二：</h4><p>1.进入hexo根目录<br>2.直接把箭头指向的<code>.deploy_git</code>和<code>public</code>直接删除！</p><p><img src="https://image-f2k.pages.dev/file/2de057fb9d542fe6d8a92.png" alt=""></p><p>3.然后，依次执行：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">hexo clean</span></span><br><span class="line"><span class="language-xml">hexo g</span></span><br><span class="line"><span class="language-xml">hexo d</span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure><h3 id="注意！！：删除这两个文件夹不会造成影响！执行完hexo三连会重新部署-简单暴力！（最好开启魔法上网）"><a href="#注意！！：删除这两个文件夹不会造成影响！执行完hexo三连会重新部署-简单暴力！（最好开启魔法上网）" class="headerlink" title="注意！！：删除这两个文件夹不会造成影响！执行完hexo三连会重新部署 简单暴力！（最好开启魔法上网）"></a>注意！！：删除这两个文件夹不会造成影响！执行完hexo三连会重新部署 简单暴力！（最好开启魔法上网）</h3>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot; &quot;&gt;&lt;/a&gt; &lt;/h1&gt;&lt;h3 id=&quot;1-关于hexo更新到GitHub后博客内容未变问题&quot;&gt;&lt;a href=&quot;#1-关于hexo更新到GitHub后博客内容未变问题&quot; class=&quot;headerlink&quot; title=&quot;1.关于hexo更新到GitHub后博客内容未变问题&quot;&gt;&lt;/a&gt;1.关于hexo更新到GitHub后博客内容未变问题&lt;/h3&gt;&lt;p&gt;最开始更新完毕确认检查后，使用 &lt;code&gt;hexo d&lt;/code&gt; 已经部署到了github，自己在github上也看到确实已经更新到了仓库，但是博客内容却一直没变。排除了是&lt;strong&gt;时间延迟&lt;/strong&gt;问题的可能，于是又看了下GitHub的仓库，在右侧边栏发现了这个东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image-f2k.pages.dev/file/4f67311684c6ca4b9c6a2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后查到了可能是分支问题，按照教学视频做的时候，根目录的 _config.yml 文件中deploy这一块是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: &lt;span class=&quot;string&quot;&gt;&amp;#x27;git&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:W-alker/W-alker&lt;span class=&quot;selector-class&quot;&gt;.github&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="hexo配置博客" scheme="https://bigbearhyl.github.io/categories/hexo%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://bigbearhyl.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>第二篇文章</title>
    <link href="https://bigbearhyl.github.io/posts/1e7ff688.html"/>
    <id>https://bigbearhyl.github.io/posts/1e7ff688.html</id>
    <published>2023-08-22T18:23:19.000Z</published>
    <updated>2023-08-30T13:25:23.422Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://image-f2k.pages.dev/file/25d2cf009b5f08d6285cc.png" alt=""></p><p>该论文是一篇关于在大数据背景下实践用户画像统计方法的研究。<br><span id="more"></span><br>由于移动互联网的快速发展，人们使用智能手机的时间和频率不断增加，用户数据和行为数据呈指数级增长，这些数据有基本的大量性、实时性、准确性、空间性和动态性。作者通过收集2014年第四季度智能手机应用程序的使用行为数据，让用户成为研究对象，分析和实践用户画像、用户流失模型预测和用户行为聚类等问题。该论文总结和概述了用户画像的定义、建立用户标签系统的基本过程和统计分析方法，并提出了三个研究用户画像的基本要素。文章提出了新的用户流失场景定义，并建立了预测用户流失行为的模型。该论文还介绍了在市场营销中运用FRM指标分析用户行为的方法，并结合聚类分析的统计方法更好地解释和描述用户行为特征。</p><p>本研究探讨了在大数据背景下实践用户画像统计方法的重要性和方法，针对移动互联网的快速发展和爆炸性增长，作者通过分析和实践用户画像、用户流失模型预测和用户行为聚类等问题，提出了一种有效的解决方案。全文总结和概述了用户画像的定义、建立用户标签系统的基本过程和统计分析方法，并提出了三个研究用户画像的基本要素。文章还提出了新的用户流失场景定义，并建立了预测用户流失行为的模型。此外，研究中介绍了在市场营销中运用FRM指标分析用户行为的方法，并结合聚类分析的统计方法更好地解释和描述用户行为特征。</p><p>这是一个行内数学公式：$\begin{vmatrix} a &amp; b \ c &amp; d \end{vmatrix}$</p><p>这个数学公式会换行显示：</p><script type="math/tex; mode=display">\begin{vmatrix} a & b \\ c & d \end{vmatrix}</script><p>e^2=100</p><script type="math/tex; mode=display">\begin{vmatrix} a & b \\ c & d \end{vmatrix}</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image-f2k.pages.dev/file/25d2cf009b5f08d6285cc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;该论文是一篇关于在大数据背景下实践用户画像统计方法的研究。&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="https://bigbearhyl.github.io/posts/5c2fafc7.html"/>
    <id>https://bigbearhyl.github.io/posts/5c2fafc7.html</id>
    <published>2023-08-22T12:14:01.000Z</published>
    <updated>2023-08-26T12:46:28.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电商文本挖掘-拜耳公司"><a href="#电商文本挖掘-拜耳公司" class="headerlink" title="电商文本挖掘- 拜耳公司"></a>电商文本挖掘- 拜耳公司</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  </span><br></pre></td></tr></table></figure><h2 id="分析近三年交易数据"><a href="#分析近三年交易数据" class="headerlink" title="分析近三年交易数据"></a>分析近三年交易数据</h2><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chdir() : change directory 修改工作目录</span></span><br><span class="line">os.chdir(<span class="string">r&#x27;D:\PY\pyworkspace\Python-电商文本挖掘项目\02-数据库文件（带数据库项目必须有）\data\驱虫剂市场&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------FileNotFoundError                         Traceback (most recent call last)&lt;ipython-input-6-ebe4765e3e41&gt; in &lt;module&gt;()      1 # chdir() : change directory 修改工作目录----&gt; 2 os.chdir(r&#39;D:\PY\pyworkspace\Python-电商文本挖掘项目\02-数据库文件（带数据库项目必须有）\data\驱虫剂市场&#39;)FileNotFoundError: [WinError 3] 系统找不到指定的路径。: &#39;D:\\PY\\pyworkspace\\Python-电商文本挖掘项目\\02-数据库文件（带数据库项目必须有）\\data\\驱虫剂市场&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取所有匹配的文件名</span></span><br><span class="line">files = glob.glob(<span class="string">&#x27;*近三年交易额*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><pre><code>[]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取文件内容</span></span><br><span class="line">df = pd.read_excel(files[<span class="number">1</span>])</span><br><span class="line">df.head()   <span class="comment"># 此函数根据位置返回对象的前“n”行</span></span><br></pre></td></tr></table></figure><!-- more --><pre><code>---------------------------------------------------------------------------IndexError                                Traceback (most recent call last)~\AppData\Local\Temp\ipykernel_18948\2217448814.py in &lt;module&gt;      1 # 读取文件内容----&gt; 2 df = pd.read_excel(files[1])      3 df.head()   # 此函数根据位置返回对象的前“n”行      4 IndexError: list index out of range</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上面相邻2个时间数据相差 30或31， 应该相差一个月</span></span><br><span class="line"><span class="comment"># 上面的时间 单位为： 天</span></span><br><span class="line"><span class="number">2018</span> - (<span class="number">43374</span> / <span class="number">365</span>)   <span class="comment"># 1899.1671232876713</span></span><br><span class="line"></span><br><span class="line"><span class="number">2015</span> - (<span class="number">42309</span> / <span class="number">365</span>)   <span class="comment"># 1899.0849315068492</span></span><br></pre></td></tr></table></figure><pre><code>1899.0849315068492</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把时间数字 转换成日期</span></span><br><span class="line">pd.to_datetime(df.时间, unit=<span class="string">&#x27;D&#x27;</span>, origin=<span class="string">&#x27;1899-12-30&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)~\AppData\Local\Temp\ipykernel_18948\1063986541.py in &lt;module&gt;      1 # 把时间数字 转换成日期----&gt; 2 pd.to_datetime(df.时间, unit=&#39;D&#39;, origin=&#39;1899-12-30&#39;)      3 NameError: name &#39;df&#39; is not defined</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历7个市场的交易数据</span></span><br><span class="line">df_list = [ ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 读取文件内容</span></span><br><span class="line">    df = pd.read_excel(file)</span><br><span class="line">    <span class="comment"># print(df.时间.dtype)  # &#x27;int64&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> df.时间.dtype == <span class="string">&#x27;int64&#x27;</span>:</span><br><span class="line">        <span class="comment"># 把时间数字 转换成日期</span></span><br><span class="line">        df.时间 = pd.to_datetime(df.时间, unit=<span class="string">&#x27;D&#x27;</span>, origin=<span class="string">&#x27;1899-12-30&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将时间变成行索引</span></span><br><span class="line">    df.set_index(keys=<span class="string">&#x27;时间&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># display(df.head())</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 修改列名</span></span><br><span class="line">    filename = file.split(<span class="string">&#x27;市场近三年交易额&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    df.columns = [filename]</span><br><span class="line">    </span><br><span class="line">    df_list.append(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 水平合并</span></span><br><span class="line">df = pd.concat(df_list, axis=<span class="number">1</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)~\AppData\Local\Temp\ipykernel_15372\2792149870.py in &lt;module&gt;      1 # 水平合并----&gt; 2 df = pd.concat(df_list, axis=1)      3 df      4 NameError: name &#39;pd&#39; is not defined</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重置索引</span></span><br><span class="line">df.reset_index(inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2018年11月，12月 数据缺失，我们考虑填充， 用线性回归填充</span></span><br><span class="line"><span class="comment"># 因为：销售额和季节，年增长趋势都有关系，用平均值，众数等都不合适</span></span><br><span class="line"><span class="comment">#  所以 我们用线性回归预测填充</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 训练：2015，2016，2017的11月，12月数据来训练</span></span><br><span class="line"><span class="comment"># 预测：2018年11月，12月的结果</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先考虑11月</span></span><br><span class="line"></span><br><span class="line">df.时间.dt.year  <span class="comment"># 年</span></span><br><span class="line">df.时间.dt.month   <span class="comment"># 月</span></span><br><span class="line">df.时间.dt.month == <span class="number">11</span>  <span class="comment"># 11月份的数据</span></span><br><span class="line"></span><br><span class="line">X = np.array([<span class="number">2015</span>, <span class="number">2016</span>, <span class="number">2017</span>])</span><br><span class="line">y = df.loc[df.时间.dt.month == <span class="number">11</span>,  <span class="string">&#x27;灭鼠杀虫剂&#x27;</span>].values[: : -<span class="number">1</span>]</span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">zip</span>(X, y))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 考虑所有产品的11月份</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">3</span>*<span class="number">4</span>, <span class="number">3</span>*<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(df.columns[<span class="number">1</span>:]):</span><br><span class="line">   </span><br><span class="line">    X = np.array([<span class="number">2015</span>, <span class="number">2016</span>, <span class="number">2017</span>])</span><br><span class="line">    y = df.loc[df.时间.dt.month == <span class="number">11</span>,  col].values[: : -<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子图</span></span><br><span class="line">    axes = plt.subplot(<span class="number">3</span>, <span class="number">3</span>, i+<span class="number">1</span>)</span><br><span class="line">    axes.plot(X, y)</span><br><span class="line">    plt.xticks(X)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 考虑所有产品的12月份</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">3</span>*<span class="number">4</span>, <span class="number">3</span>*<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(df.columns[<span class="number">1</span>:]):</span><br><span class="line">   </span><br><span class="line">    X = np.array([<span class="number">2015</span>, <span class="number">2016</span>, <span class="number">2017</span>])</span><br><span class="line">    y = df.loc[df.时间.dt.month == <span class="number">12</span>,  col].values[: : -<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子图</span></span><br><span class="line">    axes = plt.subplot(<span class="number">3</span>, <span class="number">3</span>, i+<span class="number">1</span>)</span><br><span class="line">    axes.plot(X, y)</span><br><span class="line">    plt.xticks(X)</span><br></pre></td></tr></table></figure><h3 id="线性回归：-预测2018年11月，12月的数据"><a href="#线性回归：-预测2018年11月，12月的数据" class="headerlink" title="线性回归： 预测2018年11月，12月的数据"></a>线性回归： 预测2018年11月，12月的数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先考虑11月的预测</span></span><br><span class="line">X_train = np.array([<span class="number">2015</span>, <span class="number">2016</span>, <span class="number">2017</span>]).reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">y_train = df.loc[df.时间.dt.month == <span class="number">11</span>,  <span class="string">&#x27;灭鼠杀虫剂&#x27;</span>].values[: : -<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">X_test = np.array([<span class="number">2018</span>]).reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 线性回归</span></span><br><span class="line">linear = LinearRegression()</span><br><span class="line">linear.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测</span></span><br><span class="line">linear.predict(X_test)</span><br></pre></td></tr></table></figure><h4 id="考虑11月，12月"><a href="#考虑11月，12月" class="headerlink" title="考虑11月，12月"></a>考虑11月，12月</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 遍历11月，12月</span></span><br><span class="line"><span class="keyword">for</span> month <span class="keyword">in</span> [<span class="number">11</span>, <span class="number">12</span>]:</span><br><span class="line">    </span><br><span class="line">    y_list = [ datetime.datetime(year=<span class="number">2018</span>, month=month, day=<span class="number">1</span>) ]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 遍历每一个产品</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> df.columns[<span class="number">1</span>: ]:</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 训练数据</span></span><br><span class="line">        X_train = np.array([<span class="number">2015</span>, <span class="number">2016</span>, <span class="number">2017</span>]).reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        y_train = df.loc[df.时间.dt.month == month,  col].values[: : -<span class="number">1</span>]</span><br><span class="line">        X_test = np.array([<span class="number">2018</span>]).reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 线性回归</span></span><br><span class="line">        linear = LinearRegression()</span><br><span class="line">        linear.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 预测</span></span><br><span class="line">        y = linear.predict(X_test)</span><br><span class="line">        <span class="comment"># print(month, col, y)</span></span><br><span class="line">        y_list.append(y[<span class="number">0</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print(y_list)</span></span><br><span class="line">    <span class="comment"># 把y_list转换成DataFrame</span></span><br><span class="line">    y_array = np.array(y_list).reshape(<span class="number">1</span>, -<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># display(y_array)</span></span><br><span class="line">    y_df = pd.DataFrame(data=y_array, columns=df.columns)</span><br><span class="line">    display(y_df)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 拼接</span></span><br><span class="line">    df = y_df.append(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最终的数据</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重置索引</span></span><br><span class="line">df.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></table></figure><h3 id="按照年份查看驱虫市场的总体变化趋势"><a href="#按照年份查看驱虫市场的总体变化趋势" class="headerlink" title="按照年份查看驱虫市场的总体变化趋势"></a>按照年份查看驱虫市场的总体变化趋势</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 求2016, 2017, 2018三年的总金额</span></span><br><span class="line"><span class="comment"># 按年分组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一个year的列</span></span><br><span class="line">df.insert(<span class="number">1</span>, <span class="string">&#x27;年份&#x27;</span>, df.时间.dt.year)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去掉2015的数据</span></span><br><span class="line">df = df.iloc[:-<span class="number">2</span>].copy()</span><br><span class="line">df.tail()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分组统计每年的 每个子市场 的 销售总额</span></span><br><span class="line">df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分组统计每一年的销售总额</span></span><br><span class="line">df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>().<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line">df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>().<span class="built_in">sum</span>(axis=<span class="number">1</span>).plot(marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks([<span class="number">2016</span>, <span class="number">2017</span>, <span class="number">2018</span>])</span><br><span class="line">plt.ylabel(<span class="string">&#x27;总交易额&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;近三年驱虫市场趋势&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看出:</span></span><br><span class="line"><span class="comment">#      近三年呈增长趋势,整个市场倾向于成长期和成熟期</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看各类目市场三年内销售额总和的变化趋势"><a href="#查看各类目市场三年内销售额总和的变化趋势" class="headerlink" title="查看各类目市场三年内销售额总和的变化趋势"></a>查看各类目市场三年内销售额总和的变化趋势</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>().plot(marker=<span class="string">&#x27;o&#x27;</span>, figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.xticks([<span class="number">2016</span>, <span class="number">2017</span>, <span class="number">2018</span>])</span><br><span class="line">plt.ylabel(<span class="string">&#x27;总交易额&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;近三年各类目市场销售趋势分析&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.text(<span class="number">2016</span>-<span class="number">0.05</span>, <span class="number">5.500471e+08</span>, <span class="number">6.080471e+08</span>)</span><br><span class="line">plt.text(<span class="number">2017</span>-<span class="number">0.05</span>, <span class="number">8.077740e+08</span>, <span class="number">8.477740e+08</span>)</span><br><span class="line">plt.text(<span class="number">2018</span>-<span class="number">0.05</span>, <span class="number">1.057893e+09</span>, <span class="number">1.137893e+09</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直观的看:</span></span><br><span class="line"><span class="comment">#    灭鼠杀虫剂和蚊香液都有较大的机会</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看各类目市场三年内销售额总和的占比"><a href="#查看各类目市场三年内销售额总和的占比" class="headerlink" title="查看各类目市场三年内销售额总和的占比"></a>查看各类目市场三年内销售额总和的占比</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">year_df = df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>().copy()</span><br><span class="line">year_df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算每一年 的销售总额</span></span><br><span class="line">year_total = df.groupby(by=<span class="string">&#x27;年份&#x27;</span>).<span class="built_in">sum</span>().<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">year_total</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6.080471e+08</span> / <span class="number">9.179661e+08</span></span><br><span class="line"><span class="number">7666572.12</span> / <span class="number">9.179661e+08</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 求占比</span></span><br><span class="line">year_df2 = year_df.divide(year_total, axis=<span class="string">&#x27;index&#x27;</span>)</span><br><span class="line">year_df2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stacked=True</span></span><br><span class="line">year_df2.plot(kind=<span class="string">&#x27;bar&#x27;</span>, stacked=<span class="literal">True</span>, figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.ylabel(<span class="string">&#x27;总交易额占比&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;近三年各类目市场交易额占比&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.text(<span class="number">0</span>-<span class="number">0.1</span>, <span class="number">0.4</span>, <span class="string">&#x27;66.24%&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">1</span>-<span class="number">0.1</span>, <span class="number">0.4</span>, <span class="string">&#x27;60.73%&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">2</span>-<span class="number">0.1</span>, <span class="number">0.4</span>, <span class="string">&#x27;64.65%&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="进一步分析各类目市场16-17年17-18年增幅"><a href="#进一步分析各类目市场16-17年17-18年增幅" class="headerlink" title="进一步分析各类目市场16-17年17-18年增幅"></a>进一步分析各类目市场16-17年17-18年增幅</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 16-17年增幅 =  (2017年销售额 - 2016年销售额)  / 2016年销售额</span></span><br><span class="line"><span class="comment"># 17-18年增幅 =  (2018年销售额 - 2017年销售额)  / 2017年销售额</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">year_df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># # 16-17年增幅 =  (2017年销售额 - 2016年销售额)  / 2016年销售额</span></span><br><span class="line">growth_16_17 = (year_df.loc[<span class="number">2017</span>] - year_df.loc[<span class="number">2016</span>] ) / year_df.loc[<span class="number">2016</span>] </span><br><span class="line">growth_16_17</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 17-18年增幅 =  (2018年销售额 - 2017年销售额)  / 2017年销售额</span></span><br><span class="line">growth_17_18 = (year_df.loc[<span class="number">2018</span>] - year_df.loc[<span class="number">2017</span>] ) / year_df.loc[<span class="number">2017</span>] </span><br><span class="line">growth_17_18</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">year_df2 = pd.concat((growth_16_17, growth_17_18), axis=<span class="number">1</span>)</span><br><span class="line">year_df2.columns = [<span class="string">&#x27;16-17&#x27;</span>, <span class="string">&#x27;17-18&#x27;</span>]</span><br><span class="line">year_df2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">year_df2.T</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">year_df2.T.plot(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.xticks([<span class="number">0</span>, <span class="number">1</span>], [<span class="string">&#x27;16-17&#x27;</span>, <span class="string">&#x27;17-18&#x27;</span>])</span><br><span class="line">plt.xlabel(<span class="string">&#x27;年份&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;总交易额年增幅&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;近三年总交易额年增幅&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看出：</span></span><br><span class="line"><span class="comment">#    灭鼠杀虫剂，蚊香加热器，防霉防蛀片增长幅度相对来说稍微稳定一点</span></span><br><span class="line"><span class="comment">#    电蚊香套装降幅最快， 蚊香液，蚊香片，盘香灭蟑香蚊香盘下降也很大</span></span><br></pre></td></tr></table></figure><h3 id="驱虫市场的潜力分析-垄断"><a href="#驱虫市场的潜力分析-垄断" class="headerlink" title="驱虫市场的潜力分析-垄断"></a>驱虫市场的潜力分析-垄断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HHI = <span class="number">0.643</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围:</span></span><br><span class="line"><span class="comment">#  [1/N,‘高度竞争行业’,0.01],</span></span><br><span class="line"><span class="comment">#  (0.01,‘不集中的行业’,0.15],</span></span><br><span class="line"><span class="comment">#  (0.15,‘中等集中’,0.25],</span></span><br><span class="line"><span class="comment">#  (0.25,‘高度集中’,1]   高度垄断</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>/HHI</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个市场被1.55家公司所竞争</span></span><br><span class="line"><span class="comment">#      竞争的公司越多我们认为垄断性越低</span></span><br><span class="line"><span class="comment">#      竞争的公司越少我们认为垄断性越高</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入top100数据</span></span><br><span class="line">top100 = pd.read_excel(<span class="string">&#x27;../驱虫剂市场/top100品牌数据.xlsx&#x27;</span>)</span><br><span class="line">top100.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 市场份额</span></span><br><span class="line">top100[<span class="string">&#x27;市场份额&#x27;</span>] = top100.交易指数 / top100.交易指数.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top100.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 垄断情况： 计算HHI</span></span><br><span class="line">HHI = (top100.市场份额**<span class="number">2</span>) .<span class="built_in">sum</span>()</span><br><span class="line">HHI</span><br><span class="line"><span class="comment"># HHI = 0.013546334007208918</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围:</span></span><br><span class="line"><span class="comment">#  [1/N,‘高度竞争行业’,0.01],</span></span><br><span class="line"><span class="comment">#  (0.01,‘不集中的行业’,0.15],</span></span><br><span class="line"><span class="comment">#  (0.15,‘中等集中’,0.25],</span></span><br><span class="line"><span class="comment">#  (0.25,‘高度集中’,1]   高度垄断</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结论：</span></span><br><span class="line"><span class="comment">#   属于不集中的行业, 不存在垄断</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> / HHI</span><br><span class="line"></span><br><span class="line"><span class="comment"># 驱虫市场由73.82家公司竞争，不存在垄断</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 市场份额</span></span><br><span class="line">top100.市场份额[:<span class="number">50</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>, figsize=(<span class="number">14</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;市场份额&quot;</span>)</span><br><span class="line">plt.xticks(<span class="built_in">range</span>(<span class="number">50</span>), top100.品牌[:<span class="number">50</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="灭鼠杀虫剂市场"><a href="#灭鼠杀虫剂市场" class="headerlink" title="灭鼠杀虫剂市场"></a>灭鼠杀虫剂市场</h2><h3 id="产品类别"><a href="#产品类别" class="headerlink" title="产品类别"></a>产品类别</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;D:\PY\pyworkspace\Python-电商文本挖掘项目\02-数据库文件（带数据库项目必须有）\data\灭鼠杀虫剂细分市场&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)&lt;ipython-input-1-5d7b1bcafc27&gt; in &lt;module&gt;()----&gt; 1 os.chdir(r&#39;D:\PY\pyworkspace\Python-电商文本挖掘项目\02-数据库文件（带数据库项目必须有）\data\灭鼠杀虫剂细分市场&#39;)NameError: name &#39;os&#39; is not defined</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = glob.glob(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data_list = [ ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    data = pd.read_excel(file)</span><br><span class="line">    display(data.shape)</span><br><span class="line">    </span><br><span class="line">    data_list.append(data)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并</span></span><br><span class="line">market = pd.concat(data_list)</span><br><span class="line">market.shape</span><br></pre></td></tr></table></figure><h4 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去掉大量缺失值的列</span></span><br><span class="line"><span class="comment"># market.info()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># market.isnull().any()</span></span><br><span class="line"><span class="comment"># market.isnull().all()</span></span><br><span class="line"><span class="comment"># market.isnull().sum()</span></span><br><span class="line">market.isnull().mean()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除由70%空值的列</span></span><br><span class="line"></span><br><span class="line">cond = market.isnull().mean() &gt; <span class="number">0.7</span></span><br><span class="line">market2 = market.loc[:, ~cond].copy()</span><br><span class="line">market2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market2.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">market2.isnull().mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清洗:</span></span><br><span class="line"><span class="comment">#  去掉大量缺失值的列, </span></span><br><span class="line"><span class="comment">#  去掉单一值的列,</span></span><br><span class="line"><span class="comment">#  去掉逻辑上不可用的列, 如:‘时间’,‘链 接’,‘主图链接’,‘主图视频链接’,</span></span><br><span class="line"><span class="comment">#                         ‘页码’,‘排名’,‘宝贝标题’,‘运费’,‘下架时间’,‘旺旺</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> market2.columns:</span><br><span class="line">    d = market2[col].unique()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(d) &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(d, col)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 发现 类目是单一值的列，去掉该列</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发现 类目是单一值的列，去掉该列</span></span><br><span class="line">market2.drop(columns=<span class="string">&#x27;类目&#x27;</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  去掉逻辑上不可用的列, 如:‘时间’,‘链接’,‘主图链接’,‘主图视频链接’,</span></span><br><span class="line"><span class="comment">#                         ‘页码’,‘排名’,‘宝贝标题’,‘运费’,‘下架时间’,‘旺旺</span></span><br><span class="line">market2.columns</span><br><span class="line"></span><br><span class="line">drop_cols = [<span class="string">&#x27;时间&#x27;</span>, <span class="string">&#x27;页码&#x27;</span>, <span class="string">&#x27;排名&#x27;</span>, <span class="string">&#x27;链接&#x27;</span>, <span class="string">&#x27;主图链接&#x27;</span>, <span class="string">&#x27;宝贝标题&#x27;</span>, <span class="string">&#x27;运费&#x27;</span>, <span class="string">&#x27;下架时间&#x27;</span>, <span class="string">&#x27;旺旺&#x27;</span>]</span><br><span class="line">market2.drop(columns=drop_cols, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market2.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market2.info()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market2.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画饼图</span></span><br><span class="line">market2.groupby(by=<span class="string">&#x27;类别&#x27;</span>)[<span class="string">&#x27;预估销售额&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">market2.groupby(by=<span class="string">&#x27;类别&#x27;</span>)[<span class="string">&#x27;预估销售额&#x27;</span>].<span class="built_in">sum</span>().plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f%%&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  可以看出：</span></span><br><span class="line"><span class="comment">#   灭鼠和蟑螂是市场占有率最高的</span></span><br></pre></td></tr></table></figure><h1 id="2222"><a href="#2222" class="headerlink" title="2222"></a>2222</h1><h3 id="灭鼠杀虫剂市场机会点-灭鼠类别分析"><a href="#灭鼠杀虫剂市场机会点-灭鼠类别分析" class="headerlink" title="灭鼠杀虫剂市场机会点-灭鼠类别分析"></a>灭鼠杀虫剂市场机会点-灭鼠类别分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">market2.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">market2.售价</span><br><span class="line"></span><br><span class="line">market2.类别.unique()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 得到灭鼠的数据</span></span><br><span class="line">mouse = market2[market2.类别 == <span class="string">&#x27;灭鼠&#x27;</span>].copy()</span><br><span class="line">mouse.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse = mouse.drop_duplicates(subset=[<span class="string">&#x27;宝贝ID&#x27;</span>]).copy()</span><br><span class="line">mouse.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分段</span></span><br><span class="line">bins = [<span class="number">0</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">200</span>, <span class="number">250</span>, <span class="number">300</span>, <span class="number">500</span>]</span><br><span class="line">labels = [<span class="string">&#x27;0_50&#x27;</span>, <span class="string">&#x27;50_100&#x27;</span>, <span class="string">&#x27;100_150&#x27;</span>, <span class="string">&#x27;150_200&#x27;</span>, <span class="string">&#x27;200_250&#x27;</span>, <span class="string">&#x27;250_300&#x27;</span>, <span class="string">&#x27;300以上&#x27;</span>]</span><br><span class="line">mouse[<span class="string">&#x27;价格区间&#x27;</span>] = pd.cut(mouse.售价, bins=bins, labels=labels)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse.tail()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预估销售额</span></span><br><span class="line">mouse2 = mouse.groupby(by=<span class="string">&#x27;价格区间&#x27;</span>)[[<span class="string">&#x27;预估销售额&#x27;</span>]].<span class="built_in">sum</span>()</span><br><span class="line">mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 销售额占比</span></span><br><span class="line">mouse2[<span class="string">&#x27;销售额占比&#x27;</span>] = mouse2.预估销售额 / mouse2.预估销售额.<span class="built_in">sum</span>()</span><br><span class="line">mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 宝贝数</span></span><br><span class="line"><span class="comment"># mouse2[&#x27;宝贝数&#x27;] = mouse.价格区间.value_counts()</span></span><br><span class="line">mouse2[<span class="string">&#x27;宝贝数&#x27;</span>] = mouse.groupby(by=<span class="string">&#x27;价格区间&#x27;</span>)[<span class="string">&#x27;宝贝ID&#x27;</span>].count()</span><br><span class="line">mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 宝贝数占比</span></span><br><span class="line">mouse2[<span class="string">&#x27;宝贝数占比&#x27;</span>] = mouse2.宝贝数 / mouse2.宝贝数.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单宝贝平均销售额</span></span><br><span class="line">mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>] = mouse2.预估销售额 / mouse2.宝贝数</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 相对竞争度</span></span><br><span class="line"><span class="comment"># d = 单宝贝平均销售额</span></span><br><span class="line"><span class="comment"># s = 1 - (d - dmin) / (dmax - dmin)</span></span><br><span class="line">dmin = mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>].<span class="built_in">min</span>()</span><br><span class="line">dmax = mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>].<span class="built_in">max</span>()</span><br><span class="line"></span><br><span class="line">mouse2[<span class="string">&#x27;相对竞争度&#x27;</span>] = <span class="number">1</span> - (mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>] - dmin) / (dmax - dmin)</span><br><span class="line">mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照相对竞争度 升序</span></span><br><span class="line">mouse2.sort_values(by=<span class="string">&#x27;相对竞争度&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">mouse2</span><br></pre></td></tr></table></figure><h4 id="灭鼠类别分析"><a href="#灭鼠类别分析" class="headerlink" title="灭鼠类别分析"></a>灭鼠类别分析</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 相对竞争度， 销售额占比</span></span><br><span class="line"></span><br><span class="line">mouse2.相对竞争度.plot(marker=<span class="string">&#x27;o&#x27;</span>, figsize=(<span class="number">10</span>, <span class="number">4</span>))  <span class="comment"># 相对竞争度</span></span><br><span class="line">mouse2.销售额占比.plot(kind=<span class="string">&#x27;bar&#x27;</span>, color=<span class="string">&#x27;wheat&#x27;</span>)  <span class="comment"># 销售额占比</span></span><br><span class="line"></span><br><span class="line">plt.legend()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># · 相对竞争度升序, 这里销售额占比可以理解为市场份额</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># · 可见0-50容量大,竞争大,大容量市场(对比的是50-100,容量小,竞争稍小) </span></span><br><span class="line"><span class="comment"># · 200-250,竞争小,做高价市场的优先选择,属于机会点</span></span><br><span class="line"><span class="comment"># · 可见我们喜欢的类目是:市场份额高(表示更适合大众),相对竞争度低(没人抢).</span></span><br><span class="line"><span class="comment">#          也就是找到闷声发大财的那些个分类去分蛋糕</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="0-50细分价格市场"><a href="#0-50细分价格市场" class="headerlink" title="0_50细分价格市场"></a>0_50细分价格市场</h4><ul><li>分成0-10， 10-20， 20-30，30-40，40-50的价格区间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取价格区间在0-50的数据</span></span><br><span class="line">mouse0_50 = mouse[mouse.价格区间==<span class="string">&#x27;0_50&#x27;</span>].copy()</span><br><span class="line">mouse0_50</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分段</span></span><br><span class="line">bins = [<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>]</span><br><span class="line">labels = [<span class="string">&#x27;0_10&#x27;</span>, <span class="string">&#x27;10_20&#x27;</span>, <span class="string">&#x27;20_30&#x27;</span>, <span class="string">&#x27;30_40&#x27;</span>, <span class="string">&#x27;40_50&#x27;</span>]</span><br><span class="line">mouse0_50[<span class="string">&#x27;细分价格区间&#x27;</span>] = pd.cut(mouse0_50.售价, bins=bins, labels=labels)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse0_50.head(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装成函数：生成数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_data</span>(<span class="params">mouse, group_by, order_by=<span class="string">&#x27;相对竞争度&#x27;</span>, asc=<span class="literal">True</span></span>):</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 预估销售额</span></span><br><span class="line">    mouse2 = mouse.groupby(by=group_by)[[<span class="string">&#x27;预估销售额&#x27;</span>]].<span class="built_in">sum</span>()</span><br><span class="line">    mouse2[<span class="string">&#x27;销售额占比&#x27;</span>] = mouse2.预估销售额 / mouse2.预估销售额.<span class="built_in">sum</span>()</span><br><span class="line">    mouse2[<span class="string">&#x27;宝贝数&#x27;</span>] = mouse.groupby(by=group_by)[<span class="string">&#x27;宝贝ID&#x27;</span>].count()</span><br><span class="line">    mouse2[<span class="string">&#x27;宝贝数占比&#x27;</span>] = mouse2.宝贝数 / mouse2.宝贝数.<span class="built_in">sum</span>()</span><br><span class="line">    mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>] = mouse2.预估销售额 / mouse2.宝贝数</span><br><span class="line">    </span><br><span class="line">    dmin = mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>].<span class="built_in">min</span>()</span><br><span class="line">    dmax = mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>].<span class="built_in">max</span>()</span><br><span class="line">    mouse2[<span class="string">&#x27;相对竞争度&#x27;</span>] = <span class="number">1</span> - (mouse2[<span class="string">&#x27;单宝贝平均销售额&#x27;</span>] - dmin) / (dmax - dmin)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 排序</span></span><br><span class="line">    <span class="comment"># 按照相对竞争度 升序</span></span><br><span class="line">    mouse2.sort_values(by=order_by,  ascending=asc,inplace=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> mouse2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gen_data(mouse, &#x27;价格区间&#x27;)</span></span><br><span class="line">mouse0_50_2 = gen_data(mouse0_50, <span class="string">&#x27;细分价格区间&#x27;</span>) </span><br><span class="line">mouse0_50_2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装函数; 画图</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">mouse2</span>):</span><br><span class="line">    <span class="comment"># 相对竞争度， 销售额占比</span></span><br><span class="line"></span><br><span class="line">    mouse2.相对竞争度.plot(marker=<span class="string">&#x27;o&#x27;</span>, figsize=(<span class="number">10</span>, <span class="number">4</span>))  <span class="comment"># 相对竞争度</span></span><br><span class="line">    mouse2.销售额占比.plot(kind=<span class="string">&#x27;bar&#x27;</span>, color=<span class="string">&#x27;wheat&#x27;</span>)  <span class="comment"># 销售额占比</span></span><br><span class="line"></span><br><span class="line">    plt.legend()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># draw(mouse2)</span></span><br><span class="line">draw(mouse0_50_2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  10-20价格区间的销售额最大，竞争很低，可以加大对该价格区间商品的投入</span></span><br><span class="line"><span class="comment">#  20-30价格区间的销售额也较好，也可以考虑投入</span></span><br></pre></td></tr></table></figure><h3 id="其他属性分析-店铺类型"><a href="#其他属性分析-店铺类型" class="headerlink" title="其他属性分析-店铺类型"></a>其他属性分析-店铺类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse.head(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse_store = gen_data(mouse, <span class="string">&#x27;店铺类型&#x27;</span>)</span><br><span class="line">mouse_store</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(mouse_store)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  可以看出：</span></span><br><span class="line"><span class="comment">#       天猫的销量很高，也没有对手 </span></span><br></pre></td></tr></table></figure><h3 id="其他属性分析-型号"><a href="#其他属性分析-型号" class="headerlink" title="其他属性分析-型号"></a>其他属性分析-型号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mouse_type = gen_data(mouse, <span class="string">&#x27;型号&#x27;</span>, order_by=<span class="string">&#x27;销售额占比&#x27;</span>, asc=<span class="literal">False</span>)[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">mouse_type</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(mouse_type)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有灭鼠产品的数据：</span></span><br><span class="line"><span class="comment">#       SK600 销量最高， 竞争最小， 可以重点发展和投入</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse_type0_50_2 = gen_data(mouse0_50, <span class="string">&#x27;型号&#x27;</span>, order_by=<span class="string">&#x27;销售额占比&#x27;</span>, asc=<span class="literal">False</span>)[:<span class="number">20</span>]</span><br><span class="line">draw(mouse_type0_50_2)</span><br></pre></td></tr></table></figure><h3 id="其他属性分析-物理形态"><a href="#其他属性分析-物理形态" class="headerlink" title="其他属性分析-物理形态"></a>其他属性分析-物理形态</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse_state = gen_data(mouse, <span class="string">&#x27;物理形态&#x27;</span>)</span><br><span class="line">mouse_state</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(mouse_state)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  固态 销量最高</span></span><br><span class="line"><span class="comment"># 胶水的 竞争低</span></span><br></pre></td></tr></table></figure><h2 id="其他属性分析-物理形态-净含量"><a href="#其他属性分析-物理形态-净含量" class="headerlink" title="其他属性分析-物理形态,净含量"></a>其他属性分析-物理形态,净含量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse.head()</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)&lt;ipython-input-8-6481e8b411c8&gt; in &lt;module&gt;()----&gt; 1 mouse.head()NameError: name &#39;mouse&#39; is not defined</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse_unit = gen_data(mouse, [<span class="string">&#x27;物理形态&#x27;</span>, <span class="string">&#x27;净含量&#x27;</span>], order_by=<span class="string">&#x27;销售额占比&#x27;</span>, asc=<span class="literal">False</span>)[:<span class="number">30</span>]</span><br><span class="line">mouse_unit</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(mouse_unit)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)&lt;ipython-input-7-a2d0a42d6d14&gt; in &lt;module&gt;()----&gt; 1 draw(mouse_unit)NameError: name &#39;draw&#39; is not defined</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当物理形态为固体， 净含量为1的产品卖的就比较好，销量比较高</span></span><br><span class="line"><span class="comment"># 当物理形态为啫喱，净含量为12g的产品销量也不错，没有竞争</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mouse0_50_unit = gen_data(mouse0_50, [&#x27;物理形态&#x27;, &#x27;净含量&#x27;], order_by=&#x27;销售额占比&#x27;, asc=False)[:50]</span></span><br><span class="line"><span class="comment"># draw(mouse0_50_unit)</span></span><br></pre></td></tr></table></figure><h1 id="3333"><a href="#3333" class="headerlink" title="3333"></a>3333</h1><h2 id="竞品分析"><a href="#竞品分析" class="headerlink" title="竞品分析"></a>竞品分析</h2><h3 id="商品销售数据"><a href="#商品销售数据" class="headerlink" title="商品销售数据"></a>商品销售数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day17_电商文本挖掘\data\竞争数据\商品销售数据&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = glob.glob(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安速</span></span><br><span class="line">ansu = pd.read_excel(files[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拜耳</span></span><br><span class="line">bayer = pd.read_excel(files[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 柯凌虫控</span></span><br><span class="line">ke = pd.read_excel(files[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu.shape, bayer.shape, ke.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu.columns</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安速</span></span><br><span class="line">ansu.类目.unique()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拜耳</span></span><br><span class="line">bayer.类目.unique()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 柯凌虫控</span></span><br><span class="line">ke.类目.unique()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">3</span>* <span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">axes1 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">ansu.groupby(by=<span class="string">&#x27;类目&#x27;</span>)[<span class="string">&#x27;30天销售额&#x27;</span>].<span class="built_in">sum</span>() </span><br><span class="line">    .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes1.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes1.set_title(<span class="string">&#x27;安速&#x27;</span>)</span><br><span class="line"></span><br><span class="line">axes2 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">bayer.groupby(by=<span class="string">&#x27;类目&#x27;</span>)[<span class="string">&#x27;销售额&#x27;</span>].<span class="built_in">sum</span>() </span><br><span class="line">    .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes2.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes2.set_title(<span class="string">&#x27;拜耳&#x27;</span>)</span><br><span class="line"></span><br><span class="line">axes3 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">ke.groupby(by=<span class="string">&#x27;类目&#x27;</span>)[<span class="string">&#x27;30天销售额&#x27;</span>].<span class="built_in">sum</span>() </span><br><span class="line">    .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes3.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes3.set_title(<span class="string">&#x27;柯凌虫控&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 可见拜耳只有一个市场，其他的有不同市场，但主要市场都是灭鼠杀虫剂</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="品类分布-适用对象"><a href="#品类分布-适用对象" class="headerlink" title="品类分布-适用对象"></a>品类分布-适用对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansu.columns</span><br><span class="line">bayer.columns</span><br><span class="line">ke.columns</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">3</span>* <span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">axes1 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">ansu.groupby(by=<span class="string">&#x27;适用对象&#x27;</span>)[<span class="string">&#x27;30天销售额&#x27;</span>].<span class="built_in">sum</span>() .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes1.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes1.set_title(<span class="string">&#x27;安速&#x27;</span>)</span><br><span class="line"></span><br><span class="line">axes2 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">bayer.groupby(by=<span class="string">&#x27;使用对象&#x27;</span>)[<span class="string">&#x27;销售额&#x27;</span>].<span class="built_in">sum</span>() .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes2.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes2.set_title(<span class="string">&#x27;拜耳&#x27;</span>)</span><br><span class="line"></span><br><span class="line">axes3 = plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">ke.groupby(by=<span class="string">&#x27;适用对象&#x27;</span>)[<span class="string">&#x27;30天销售额&#x27;</span>].<span class="built_in">sum</span>() .plot(kind=<span class="string">&#x27;pie&#x27;</span>, autopct=<span class="string">&#x27;%.2f&#x27;</span>, startangle=<span class="number">60</span>)</span><br><span class="line">axes3.set_ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">axes3.set_title(<span class="string">&#x27;柯凌虫控&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#  拜耳的主要对象是蟑螂,而另外两家除此之外还有螨，鼠</span></span><br><span class="line"><span class="comment"># · 而从之前的分析看灭鼠和蟑螂的整体市场份额都大</span></span><br><span class="line"><span class="comment"># · 应该开拓新市场,尤其是灭鼠,也考察其他两家都开拓的螨市场</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="商品交易数据"><a href="#商品交易数据" class="headerlink" title="商品交易数据"></a>商品交易数据</h3><h4 id="产品结构-拜耳"><a href="#产品结构-拜耳" class="headerlink" title="产品结构-拜耳"></a>产品结构-拜耳</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day17_电商文本挖掘\data\竞争数据\商品交易数据&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = glob.glob(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先分析拜耳</span></span><br><span class="line">bayer = pd.read_excel(files[<span class="number">1</span>])</span><br><span class="line">bayer.head(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bayer.商品.value_counts()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易增长幅度</span></span><br><span class="line">bayer2 = bayer.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;交易增长幅度&#x27;</span>]].mean().copy()</span><br><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易金额</span></span><br><span class="line">bayer2[<span class="string">&#x27;交易金额&#x27;</span>] = bayer.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;交易金额&#x27;</span>]].<span class="built_in">sum</span>()</span><br><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易金额占比</span></span><br><span class="line">bayer2[<span class="string">&#x27;交易金额占比&#x27;</span>] = bayer2[<span class="string">&#x27;交易金额&#x27;</span>]  / bayer2[<span class="string">&#x27;交易金额&#x27;</span>] .<span class="built_in">sum</span>()</span><br><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 商品个数</span></span><br><span class="line">bayer2[<span class="string">&#x27;商品个数&#x27;</span>] = bayer.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;商品&#x27;</span>]].count()</span><br><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重置索引</span></span><br><span class="line">bayer2.reset_index(inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2.info()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bayer2.describe()</span><br><span class="line">bayer2.describe([<span class="number">.75</span>, <span class="number">.9</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><h4 id="对过大的数据，-采用盖帽法"><a href="#对过大的数据，-采用盖帽法" class="headerlink" title="对过大的数据， 采用盖帽法"></a>对过大的数据， 采用盖帽法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对 交易增长幅度 适用盖帽法</span></span><br><span class="line"><span class="comment"># 1. 提供一个阈值（自己设定的最大值）: 采用分位数</span></span><br><span class="line"><span class="comment"># 2. 将大于该阈值的数据修改为该阈值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 提供一个阈值（自己设定的最大值）: 采用分位数</span></span><br><span class="line"><span class="comment"># 提供90%分位数</span></span><br><span class="line"><span class="comment"># np.percentile(bayer2.交易增长幅度, q=99)</span></span><br><span class="line"><span class="comment"># bayer2.交易增长幅度.quantile(q=0.9)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 交易增长幅度 适用盖帽法</span></span><br><span class="line">thred = bayer2.交易增长幅度.quantile(q=<span class="number">0.9</span>)</span><br><span class="line">bayer2.loc[bayer2.交易增长幅度&gt;thred, <span class="string">&#x27;交易增长幅度&#x27;</span>] = thred</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2.describe([<span class="number">.75</span>, <span class="number">.9</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 再对 交易金额 盖帽法</span></span><br><span class="line">thred2 = bayer2.交易金额.quantile(q=<span class="number">0.9</span>)</span><br><span class="line">bayer2.loc[bayer2.交易金额&gt;thred2, <span class="string">&#x27;交易金额&#x27;</span>] = thred2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同时对交易金额占比也修改</span></span><br><span class="line">bayer2[<span class="string">&#x27;交易金额占比&#x27;</span>] = bayer2[<span class="string">&#x27;交易金额&#x27;</span>]  / bayer2[<span class="string">&#x27;交易金额&#x27;</span>] .<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2.describe([<span class="number">.75</span>, <span class="number">.9</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><h3 id="画-波士顿矩阵图"><a href="#画-波士顿矩阵图" class="headerlink" title="画 波士顿矩阵图"></a>画 波士顿矩阵图</h3><ul><li>拜耳公司</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bayer2.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交易增长幅度： 市场增长率，发展前景， Y轴</span></span><br><span class="line"><span class="comment"># 交易金额占比： 市场份额， X轴</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易增长幅度： 市场增长率，发展前景， Y轴</span></span><br><span class="line"><span class="comment"># 交易金额占比： 市场份额， X轴</span></span><br><span class="line"></span><br><span class="line">sns.scatterplot(</span><br><span class="line">        data=bayer2,</span><br><span class="line">        x=<span class="string">&#x27;交易金额占比&#x27;</span>,</span><br><span class="line">        y=<span class="string">&#x27;交易增长幅度&#x27;</span>,</span><br><span class="line">        hue=<span class="string">&#x27;商品个数&#x27;</span>,</span><br><span class="line">        size=<span class="string">&#x27;商品个数&#x27;</span>,</span><br><span class="line">        palette=<span class="string">&#x27;cool&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画分割线：中位数 50%位置</span></span><br><span class="line"><span class="comment"># bayer2.交易增长幅度.quantile(q=0.5)</span></span><br><span class="line"><span class="comment"># bayer2.交易金额占比.quantile(q=0.5)</span></span><br><span class="line"></span><br><span class="line">plt.axhline(bayer2.交易增长幅度.quantile(q=<span class="number">0.5</span>))  <span class="comment"># 水平线</span></span><br><span class="line">plt.axvline(bayer2.交易金额占比.quantile(q=<span class="number">0.5</span>))  <span class="comment"># 垂直线</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出下面的产品：</span></span><br><span class="line"><span class="comment"># 瘦狗类：左下角</span></span><br><span class="line"><span class="comment"># 问题类：左上角</span></span><br><span class="line"><span class="comment"># 明显类：右上角</span></span><br><span class="line"><span class="comment"># 奶牛类：右下角</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中位数</span></span><br><span class="line">growth_q5 = bayer2.交易增长幅度.quantile(q=<span class="number">0.5</span>)  <span class="comment"># Y轴中位数：增长率</span></span><br><span class="line">money_q5 = bayer2.交易金额占比.quantile(q=<span class="number">0.5</span>)  <span class="comment"># X轴中位数：市场份额</span></span><br><span class="line"><span class="built_in">print</span>(growth_q5, money_q5)</span><br><span class="line"></span><br><span class="line">growth = bayer2.交易增长幅度</span><br><span class="line">money = bayer2.交易金额占比</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 瘦狗类</span></span><br><span class="line">dog = bayer2[(growth&lt;growth_q5) &amp; (money&lt;money_q5)]</span><br><span class="line">dog</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 问题类</span></span><br><span class="line">question = bayer2[(growth&gt;growth_q5) &amp; (money&lt;money_q5)]</span><br><span class="line">question</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 明星类</span></span><br><span class="line">star = bayer2[(growth&gt;growth_q5) &amp; (money&gt;money_q5)]</span><br><span class="line">star</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 奶牛类</span></span><br><span class="line">cow = bayer2[(growth&lt;growth_q5) &amp; (money&gt;money_q5)]</span><br><span class="line">cow</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  拜耳</span></span><br><span class="line"><span class="comment">#   问题类，奶牛类产品比较多</span></span><br><span class="line"><span class="comment">#   瘦狗类产品较少</span></span><br><span class="line"><span class="comment">#   明星类产品较少，需要把问题类产品转换成明显类</span></span><br></pre></td></tr></table></figure><h4 id="产品结构-安速"><a href="#产品结构-安速" class="headerlink" title="产品结构-安速"></a>产品结构-安速</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansu = pd.read_excel(files[<span class="number">0</span>])</span><br><span class="line">ansu.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_data2</span>(<span class="params">df</span>):</span><br><span class="line">    <span class="comment"># 交易增长幅度</span></span><br><span class="line">    df2 = df.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;交易增长幅度&#x27;</span>]].mean().copy()</span><br><span class="line">    <span class="comment"># 交易金额</span></span><br><span class="line">    df2[<span class="string">&#x27;交易金额&#x27;</span>] = df.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;交易金额&#x27;</span>]].<span class="built_in">sum</span>()</span><br><span class="line">    <span class="comment"># 交易金额占比</span></span><br><span class="line">    df2[<span class="string">&#x27;交易金额占比&#x27;</span>] = df2[<span class="string">&#x27;交易金额&#x27;</span>]  / df2[<span class="string">&#x27;交易金额&#x27;</span>] .<span class="built_in">sum</span>()</span><br><span class="line">    <span class="comment"># 商品个数</span></span><br><span class="line">    df2[<span class="string">&#x27;商品个数&#x27;</span>] = df.groupby(by=<span class="string">&#x27;商品&#x27;</span>)[[<span class="string">&#x27;商品&#x27;</span>]].count()</span><br><span class="line">    <span class="comment"># 重置索引</span></span><br><span class="line">    df2.reset_index(inplace=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> df2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansu2 = gen_data2(ansu)</span><br><span class="line">ansu2.head(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu2.describe([<span class="number">.75</span>, <span class="number">.90</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装函数：盖帽法处理最大值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nut_cap</span>(<span class="params">df, cols=[<span class="string">&#x27;交易增长幅度&#x27;</span>, <span class="string">&#x27;交易金额&#x27;</span>], q=<span class="number">0.9</span></span>):</span><br><span class="line">    df = df.copy()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 对 cols 适用盖帽法</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> cols:        </span><br><span class="line">        thred = df[col].quantile(q=q)</span><br><span class="line">        df.loc[df[col]&gt;thred, col] = thred</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;交易金额&#x27;</span> <span class="keyword">in</span> cols:</span><br><span class="line">        <span class="comment"># 同时对交易金额占比也修改</span></span><br><span class="line">        df[<span class="string">&#x27;交易金额占比&#x27;</span>] = df[<span class="string">&#x27;交易金额&#x27;</span>]  / df[<span class="string">&#x27;交易金额&#x27;</span>] .<span class="built_in">sum</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nut_cap(ansu2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu2.describe([<span class="number">.75</span>, <span class="number">.90</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nut_cap(ansu2).describe([<span class="number">.75</span>, <span class="number">.90</span>, <span class="number">.99</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装函数： 画图</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_boston</span>(<span class="params">df, x=<span class="string">&#x27;交易金额占比&#x27;</span>, y=<span class="string">&#x27;交易增长幅度&#x27;</span>, hue=<span class="string">&#x27;商品个数&#x27;</span>, size=<span class="string">&#x27;商品个数&#x27;</span>, q=<span class="number">0.5</span></span>):</span><br><span class="line">    <span class="comment"># 交易增长幅度： 市场增长率，发展前景， Y轴</span></span><br><span class="line">    <span class="comment"># 交易金额占比： 市场份额， X轴</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">    sns.scatterplot(</span><br><span class="line">            data=df,</span><br><span class="line">            x=x,</span><br><span class="line">            y=y,</span><br><span class="line">            hue=hue,</span><br><span class="line">            size=size,</span><br><span class="line">            palette=<span class="string">&#x27;cool&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 画分割线：中位数 50%位置</span></span><br><span class="line">    plt.axhline(df[y].quantile(q=q))  <span class="comment"># 水平线</span></span><br><span class="line">    plt.axvline(df[x].quantile(q=q))  <span class="comment"># 垂直线</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 画数字</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> df.index:</span><br><span class="line">        plt.text(</span><br><span class="line">            x=df.loc[i, x]+<span class="number">0.0005</span>,</span><br><span class="line">            y=df.loc[i, y]-<span class="number">0.04</span>,</span><br><span class="line">            s=i, </span><br><span class="line">            fontsize=<span class="number">10</span></span><br><span class="line">        )</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu3 = nut_cap(ansu2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw_boston(ansu3)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装函数： 找出瘦狗类，问题类，明星类，奶牛类产品</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_product</span>(<span class="params">df, x=<span class="string">&#x27;交易金额占比&#x27;</span>, y=<span class="string">&#x27;交易增长幅度&#x27;</span>, q=<span class="number">0.5</span></span>):</span><br><span class="line">    <span class="comment"># 中位数</span></span><br><span class="line">    growth_q5 = df[y].quantile(q=q)  <span class="comment"># Y轴中位数：增长率</span></span><br><span class="line">    money_q5 = df[x].quantile(q=q)  <span class="comment"># X轴中位数：市场份额</span></span><br><span class="line">    <span class="comment"># print(growth_q5, money_q5)</span></span><br><span class="line"></span><br><span class="line">    growth = df[y]</span><br><span class="line">    money = df[x]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 瘦狗类</span></span><br><span class="line">    dog = df[(growth&lt;=growth_q5) &amp; (money&lt;=money_q5)]</span><br><span class="line">    <span class="comment"># 问题类</span></span><br><span class="line">    question = df[(growth&gt;growth_q5) &amp; (money&lt;money_q5)]</span><br><span class="line">    <span class="comment"># 明星类</span></span><br><span class="line">    star = df[(growth&gt;=growth_q5) &amp; (money&gt;=money_q5)]</span><br><span class="line">    <span class="comment"># 奶牛类</span></span><br><span class="line">    cow = df[(growth&lt;growth_q5) &amp; (money&gt;money_q5)]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (dog, question, star, cow)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dog, question, star, cow = get_product(ansu3)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 瘦狗类产品都是蟑螂药</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">question</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题类产品较多， 可以发展为明星类产品</span></span><br><span class="line"><span class="comment"># 大多是蟑螂药</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">star</span><br><span class="line"></span><br><span class="line"><span class="comment"># 明星类产品较少， 大部分是蟑螂</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 奶牛类产品较多</span></span><br><span class="line"><span class="comment"># 大都是除蟑螂，可以发展其他产品 </span></span><br></pre></td></tr></table></figure><h4 id="产品结构-柯凌虫控"><a href="#产品结构-柯凌虫控" class="headerlink" title="产品结构-柯凌虫控"></a>产品结构-柯凌虫控</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ke = pd.read_excel(files[<span class="number">2</span>])</span><br><span class="line">ke</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ke2 = gen_data2(ke)</span><br><span class="line">ke2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ke3 = nut_cap(ke2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw_boston(ke3)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dog, question, star, cow = get_product(ke3)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dog</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">question</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">star</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cow</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 科凌虫控积极发展多个产品, </span></span><br><span class="line"><span class="comment">#  然而每个产品结构相对独立(奶牛除蟑,明星灭鼠,潜力除螨), 没有后续的支持.竞争力不是那么强</span></span><br><span class="line"><span class="comment"># </span></span><br></pre></td></tr></table></figure><h1 id="44444"><a href="#44444" class="headerlink" title="44444"></a>44444</h1><h3 id="流量结构"><a href="#流量结构" class="headerlink" title="流量结构"></a>流量结构</h3><ul><li>拜耳</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day18_电商文本挖掘\data\竞争数据\流量渠道数据&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = glob.glob(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拜耳的流量数据</span></span><br><span class="line">bayer = pd.read_excel(files[<span class="number">1</span>])</span><br><span class="line">bayer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取前10名</span></span><br><span class="line">bayer2 = bayer.sort_values(by=<span class="string">&#x27;交易指数&#x27;</span>, ascending=<span class="literal">False</span>)[:<span class="number">10</span>].copy()</span><br><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易指数占比</span></span><br><span class="line">bayer2[<span class="string">&#x27;交易指数占比&#x27;</span>] = bayer2.交易指数  / bayer2.交易指数.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bayer2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把流量来源 当成索引，方便画图</span></span><br><span class="line">bayer2.set_index(keys=<span class="string">&#x27;流量来源&#x27;</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 付费流量</span></span><br><span class="line">pay = [<span class="string">&#x27;直通车&#x27;</span>, <span class="string">&#x27;付费流量&#x27;</span>, <span class="string">&#x27;淘宝客&#x27;</span>]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.1</span> <span class="keyword">if</span> i <span class="keyword">in</span> pay <span class="keyword">else</span> <span class="number">0</span>  <span class="keyword">for</span> i <span class="keyword">in</span> bayer2.index]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line">bayer2.交易指数占比.plot(kind=<span class="string">&#x27;pie&#x27;</span>, </span><br><span class="line">                  figsize=(<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">                   autopct=<span class="string">&#x27;%.1f%%&#x27;</span>,</span><br><span class="line">                    cmap=<span class="string">&#x27;cool&#x27;</span>,</span><br><span class="line">                   explode=[<span class="number">0.1</span> <span class="keyword">if</span> i <span class="keyword">in</span> pay <span class="keyword">else</span> <span class="number">0</span>  <span class="keyword">for</span> i <span class="keyword">in</span> bayer2.index]</span><br><span class="line">                  )</span><br><span class="line"></span><br><span class="line">plt.ylabel(<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求：总交易指数， 付费流量占比，付费流量带来的交易指数</span></span><br><span class="line"><span class="comment"># 总交易指数</span></span><br><span class="line">total = bayer2.交易指数.<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 付费流量占比</span></span><br><span class="line">pay_ratio = bayer2.loc[pay, <span class="string">&#x27;交易指数占比&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 付费流量带来的交易指数</span></span><br><span class="line">pay_total = bayer2.loc[pay, <span class="string">&#x27;交易指数&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;前10名流量种，总交易指数：<span class="subst">&#123;total&#125;</span>, &#x27;</span></span><br><span class="line">      <span class="string">f&#x27;付费流量占比:<span class="subst">&#123; <span class="string">&quot;%.2f %%&quot;</span> % (pay_ratio*<span class="number">100</span>) &#125;</span>, &#x27;</span></span><br><span class="line">      <span class="string">f&#x27;付费流量带来的交易指数:<span class="subst">&#123;pay_total&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>安速</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拜耳的流量数据</span></span><br><span class="line">ansu = pd.read_excel(files[<span class="number">0</span>])</span><br><span class="line">ansu.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取前10名</span></span><br><span class="line">ansu2 = ansu.sort_values(by=<span class="string">&#x27;交易指数&#x27;</span>, ascending=<span class="literal">False</span>)[:<span class="number">10</span>].copy()</span><br><span class="line">ansu2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易指数占比</span></span><br><span class="line">ansu2[<span class="string">&#x27;交易指数占比&#x27;</span>] = ansu2.交易指数  / ansu2.交易指数.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansu2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将流量来源设置为行索引</span></span><br><span class="line">ansu2.set_index(keys=<span class="string">&#x27;流量来源&#x27;</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">df, pay = [<span class="string">&#x27;直通车&#x27;</span>, <span class="string">&#x27;付费流量&#x27;</span>]</span>):</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 画图</span></span><br><span class="line">    df.交易指数占比.plot(kind=<span class="string">&#x27;pie&#x27;</span>, </span><br><span class="line">                   figsize=(<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">                   autopct=<span class="string">&#x27;%.1f%%&#x27;</span>,</span><br><span class="line">                   cmap=<span class="string">&#x27;cool&#x27;</span>,</span><br><span class="line">                   explode=[<span class="number">0.1</span> <span class="keyword">if</span> i <span class="keyword">in</span> pay <span class="keyword">else</span> <span class="number">0</span>  <span class="keyword">for</span> i <span class="keyword">in</span> df.index]</span><br><span class="line">                  )</span><br><span class="line"></span><br><span class="line">    plt.ylabel(<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 求：总交易指数， 付费流量占比，付费流量带来的交易指数</span></span><br><span class="line">    <span class="comment"># 总交易指数</span></span><br><span class="line">    total = df.交易指数.<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 付费流量占比</span></span><br><span class="line">    pay_ratio = df.loc[pay, <span class="string">&#x27;交易指数占比&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 付费流量带来的交易指数</span></span><br><span class="line">    pay_total = df.loc[pay, <span class="string">&#x27;交易指数&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;前10名流量中，总交易指数：<span class="subst">&#123;total&#125;</span>, &#x27;</span></span><br><span class="line">            <span class="string">f&#x27;付费流量占比:<span class="subst">&#123; <span class="string">&quot;%.2f %%&quot;</span> % (pay_ratio*<span class="number">100</span>) &#125;</span>, &#x27;</span></span><br><span class="line">            <span class="string">f&#x27;付费流量带来的交易指数:<span class="subst">&#123;pay_total&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(ansu2)</span><br></pre></td></tr></table></figure><ul><li>柯凌虫控</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ke = pd.read_excel(files[<span class="number">2</span>])</span><br><span class="line">ke.head()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取交易指数排名靠前的10个</span></span><br><span class="line">ke2 = ke.sort_values(by=<span class="string">&#x27;交易指数&#x27;</span>, ascending=<span class="literal">False</span>)[:<span class="number">10</span>].copy()</span><br><span class="line">ke2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交易指数占比</span></span><br><span class="line">ke2[<span class="string">&#x27;交易指数占比&#x27;</span>] = ke2.交易指数 / ke2.交易指数.<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置索引</span></span><br><span class="line">ke2.set_index(keys=<span class="string">&#x27;流量来源&#x27;</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw(ke2, pay=[<span class="string">&#x27;直通车&#x27;</span>, <span class="string">&#x27;付费流量&#x27;</span>, <span class="string">&#x27;淘宝客&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拜耳： 前10名流量种，总交易指数：2334051, 付费流量占比:21.85 %, 付费流量带来的交易指数:509959</span></span><br><span class="line"><span class="comment"># 安速： 前10名流量中，总交易指数：748539, 付费流量占比:18.58 %, 付费流量带来的交易指数:139048</span></span><br><span class="line"><span class="comment"># 柯凌虫控： 前10名流量中，总交易指数：1918111, 付费流量占比:25.51 %, 付费流量带来的交易指数:489263</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拜耳在流量结构中具有优势</span></span><br><span class="line"><span class="comment"># 付费流量带来的收益不错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="评论分析"><a href="#评论分析" class="headerlink" title="评论分析"></a>评论分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day18_电商文本挖掘\data\竞争数据\评论舆情数据&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = glob.glob(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">files</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拜耳</span></span><br><span class="line">bayer = pd.read_excel(files[<span class="number">1</span>])</span><br><span class="line">bayer.head(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安速</span></span><br><span class="line">ansu = pd.read_excel(files[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 柯凌虫控</span></span><br><span class="line">ke = pd.read_excel(files[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取出评论数据</span></span><br><span class="line">comments = bayer.评论.values.tolist()</span><br><span class="line">comments</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拼接成字符串</span></span><br><span class="line">comments_str = <span class="string">&#x27;&#x27;</span>.join(comments)</span><br><span class="line">comments_str</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保留中英文数字：</span></span><br><span class="line"><span class="comment">#  需要去除那些没有意义的词，符号</span></span><br><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换不用的词</span></span><br><span class="line"><span class="comment"># \u4E00-\u9FA5 ： 代表中文</span></span><br><span class="line">comments2 = re.sub(<span class="string">r&#x27;[^a-zA-Z0-9\u4E00-\u9FA5]&#x27;</span>, <span class="string">&#x27;&#x27;</span>, comments_str)</span><br><span class="line">comments2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jieba 结巴分词</span></span><br><span class="line"><span class="comment"># pip install jieba</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;天天向上好好学习&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分词，精简模式</span></span><br><span class="line">jieba.lcut(s)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分词，搜索引擎模式，分的更细一点</span></span><br><span class="line">jieba.lcut_for_search(s)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分词，全模式，把能找出的词都找出来</span></span><br><span class="line">jieba.lcut(s, cut_all=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="对拜耳的评论数据分词"><a href="#对拜耳的评论数据分词" class="headerlink" title="对拜耳的评论数据分词"></a>对拜耳的评论数据分词</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对拜耳的评论数据分词</span></span><br><span class="line">comments2_cut = jieba.lcut(comments2)</span><br><span class="line"><span class="built_in">len</span>(comments2_cut)</span><br></pre></td></tr></table></figure><h4 id="词云"><a href="#词云" class="headerlink" title="词云"></a>词云</h4><ul><li>pip install wordcloud</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day18_电商文本挖掘\data&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停用词</span></span><br><span class="line">stop_worlds = pd.read_csv(<span class="string">&#x27;百度停用词表.txt&#x27;</span>, sep=<span class="string">&#x27;\n&#x27;</span>, header=<span class="literal">None</span>)[<span class="number">0</span>].values.tolist()</span><br><span class="line">stop_worlds</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加自己的停用词</span></span><br><span class="line">stop_worlds.extend([<span class="string">&#x27;蟑螂&#x27;</span>, <span class="string">&#x27;还&#x27;</span>, <span class="string">&#x27;不&#x27;</span>, <span class="string">&#x27;都&#x27;</span>, <span class="string">&#x27;效果&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将comments2_cut拼接成字符串</span></span><br><span class="line">comments2_cut_str = <span class="string">&#x27; &#x27;</span>.join(comments2_cut)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 词云</span></span><br><span class="line">wc = WordCloud(</span><br><span class="line">        font_path=<span class="string">&#x27;SimHei.ttf&#x27;</span>, </span><br><span class="line">        mask=plt.imread(<span class="string">&#x27;leaf.jpg&#x27;</span>),</span><br><span class="line">        stopwords=stop_worlds,</span><br><span class="line">        background_color=<span class="string">&#x27;white&#x27;</span></span><br><span class="line">    ).generate(comments2_cut_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">plt.imshow(wc)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> jieba <span class="keyword">import</span> analyse</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看权重</span></span><br><span class="line">analyse.extract_tags(comments2_cut_str, withWeight=<span class="literal">True</span>, topK=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h4 id="安速"><a href="#安速" class="headerlink" title="安速"></a>安速</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取出评论数据</span></span><br><span class="line">comments = ansu.评论.values.tolist()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接成字符串</span></span><br><span class="line">comments_str = <span class="string">&#x27;&#x27;</span>.join(comments)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换不用的词</span></span><br><span class="line">comments2 = re.sub(<span class="string">r&#x27;[^a-zA-Z0-9\u4E00-\u9FA5]&#x27;</span>, <span class="string">&#x27;&#x27;</span>, comments_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对拜耳的评论数据分词</span></span><br><span class="line">comments2_cut = jieba.lcut(comments2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将comments2_cut拼接成字符串</span></span><br><span class="line">comments2_cut_str = <span class="string">&#x27; &#x27;</span>.join(comments2_cut)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day18_电商文本挖掘\data&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停用词</span></span><br><span class="line">stop_worlds = pd.read_csv(<span class="string">&#x27;百度停用词表.txt&#x27;</span>, sep=<span class="string">&#x27;\n&#x27;</span>, header=<span class="literal">None</span>)[<span class="number">0</span>].values.tolist()</span><br><span class="line">stop_worlds</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加自己的停用词</span></span><br><span class="line">stop_worlds.extend([<span class="string">&#x27;&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 词云</span></span><br><span class="line">wc = WordCloud(</span><br><span class="line">        font_path=<span class="string">&#x27;SimHei.ttf&#x27;</span>, </span><br><span class="line">        mask=plt.imread(<span class="string">&#x27;leaf.jpg&#x27;</span>),</span><br><span class="line">        stopwords=stop_worlds,</span><br><span class="line">        background_color=<span class="string">&#x27;white&#x27;</span></span><br><span class="line">    ).generate(comments2_cut_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">plt.imshow(wc) </span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看权重</span></span><br><span class="line">analyse.extract_tags(comments2_cut_str, withWeight=<span class="literal">True</span>, topK=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h4 id="柯凌虫控"><a href="#柯凌虫控" class="headerlink" title="柯凌虫控"></a>柯凌虫控</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取出评论数据</span></span><br><span class="line">comments = ke.评论.values.tolist()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接成字符串</span></span><br><span class="line">comments_str = <span class="string">&#x27;&#x27;</span>.join(comments)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换不用的词</span></span><br><span class="line">comments2 = re.sub(<span class="string">r&#x27;[^a-zA-Z0-9\u4E00-\u9FA5]&#x27;</span>, <span class="string">&#x27;&#x27;</span>, comments_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对拜耳的评论数据分词</span></span><br><span class="line">comments2_cut = jieba.lcut(comments2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将comments2_cut拼接成字符串</span></span><br><span class="line">comments2_cut_str = <span class="string">&#x27; &#x27;</span>.join(comments2_cut)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">os.chdir(<span class="string">r&#x27;C:\Users\ijeff\Desktop\Python2105\day18_电商文本挖掘\data&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停用词</span></span><br><span class="line">stop_worlds = pd.read_csv(<span class="string">&#x27;百度停用词表.txt&#x27;</span>, sep=<span class="string">&#x27;\n&#x27;</span>, header=<span class="literal">None</span>)[<span class="number">0</span>].values.tolist()</span><br><span class="line">stop_worlds</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加自己的停用词</span></span><br><span class="line">stop_worlds.extend([<span class="string">&#x27;&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 词云</span></span><br><span class="line">wc = WordCloud(</span><br><span class="line">        font_path=<span class="string">&#x27;SimHei.ttf&#x27;</span>, </span><br><span class="line">        mask=plt.imread(<span class="string">&#x27;leaf.jpg&#x27;</span>),</span><br><span class="line">        stopwords=stop_worlds,</span><br><span class="line">        background_color=<span class="string">&#x27;white&#x27;</span></span><br><span class="line">    ).generate(comments2_cut_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">plt.imshow(wc)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看权重</span></span><br><span class="line">analyse.extract_tags(comments2_cut_str, withWeight=<span class="literal">True</span>, topK=<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;电商文本挖掘-拜耳公司&quot;&gt;&lt;a href=&quot;#电商文本挖掘-拜耳公司&quot; class=&quot;headerlink&quot; title=&quot;电商文本挖掘- 拜耳公司&quot;&gt;&lt;/a&gt;电商文本挖掘- 拜耳公司&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; seaborn &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; sns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sns.&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plt.rcParams[&lt;span class=&quot;string&quot;&gt;&amp;#x27;font.sans-serif&amp;#x27;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;#x27;SimHei&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.rcParams[&lt;span class=&quot;string&quot;&gt;&amp;#x27;axes.unicode_minus&amp;#x27;&lt;/span&gt;] = &lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;分析近三年交易数据&quot;&gt;&lt;a href=&quot;#分析近三年交易数据&quot; class=&quot;headerlink&quot; title=&quot;分析近三年交易数据&quot;&gt;&lt;/a&gt;分析近三年交易数据&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Markdown语法与外挂标签写法汇总</title>
    <link href="https://bigbearhyl.github.io/posts/2013454d.html"/>
    <id>https://bigbearhyl.github.io/posts/2013454d.html</id>
    <published>2022-08-09T10:19:03.000Z</published>
    <updated>2022-10-23T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Markdown语法自带格式"><a href="#1-Markdown语法自带格式" class="headerlink" title="1.Markdown语法自带格式"></a>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以"><a href="#1-6-列表-跟空格都可以" class="headerlink" title="1.6 列表(*,+,-跟空格都可以)"></a>1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表"><a href="#1-6-1-无序列表" class="headerlink" title="1.6.1 无序列表"></a>1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格"><a href="#1-8-表格" class="headerlink" title="1.8 表格"></a>1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式"><a href="#1-9-公式" class="headerlink" title="1.9 公式"></a>1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="2-Butterfly外挂标签"><a href="#2-Butterfly外挂标签" class="headerlink" title="2.Butterfly外挂标签"></a>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text"><a href="#2-1-行内文本样式-text" class="headerlink" title="2.1 行内文本样式 text"></a>2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span"><a href="#2-2-行内文本-span" class="headerlink" title="2.2 行内文本 span"></a>2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p"><a href="#2-3-段落文本-p" class="headerlink" title="2.3 段落文本 p"></a>2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note"><a href="#2-4-引用note" class="headerlink" title="2.4 引用note"></a>2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>2.<code>modern</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip"><a href="#2-5-上标标签-tip" class="headerlink" title="2.5 上标标签 tip"></a>2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima"><a href="#2-6-动态标签-anima" class="headerlink" title="2.6 动态标签 anima"></a>2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>   1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>3.On hover（当鼠标悬停时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>4.On parent hover（当鼠标悬停在父级元素时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox"><a href="#2-7-复选列表-checkbox" class="headerlink" title="2.7 复选列表 checkbox"></a>2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio"><a href="#2-8-单选列表-radio" class="headerlink" title="2.8 单选列表 radio"></a>2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline"><a href="#2-9-时间轴-timeline" class="headerlink" title="2.9 时间轴 timeline"></a>2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link"><a href="#2-10-链接卡片-link" class="headerlink" title="2.10 链接卡片 link"></a>2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns"><a href="#2-11-按钮-btns" class="headerlink" title="2.11 按钮 btns"></a>2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard"><a href="#2-12-github卡片-ghcard" class="headerlink" title="2.12 github卡片 ghcard"></a>2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><p>2.仓库信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage"><a href="#2-13-github徽标-ghbdage" class="headerlink" title="2.13 github徽标 ghbdage"></a>2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object><p>3.拓展参数，支持shields的API的全部参数内容</p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites"><a href="#2-14-网站卡片-sites" class="headerlink" title="2.14 网站卡片 sites"></a>2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage"><a href="#2-15-行内图片-inlineimage" class="headerlink" title="2.15 行内图片 inlineimage"></a>2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image"><a href="#2-16-单张图片-image" class="headerlink" title="2.16 单张图片 image"></a>2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>2.指定宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><br>3.指定宽度并添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>4.设置占位背景色：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio"><a href="#2-17-音频-audio" class="headerlink" title="2.17 音频 audio"></a>2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video"><a href="#2-18-视频-video" class="headerlink" title="2.18 视频 video"></a>2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><br>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery"><a href="#2-19-相册-gallery" class="headerlink" title="2.19 相册 gallery"></a>2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>2.gallery 相册<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table></div><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding"><a href="#2-20-折叠框-folding" class="headerlink" title="2.20 折叠框 folding"></a>2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><br><!-- tab 参数配置 --></p><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab"><a href="#2-21-分栏-tab" class="headerlink" title="2.21 分栏 tab"></a>2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem"><a href="#2-22-诗词标签-poem" class="headerlink" title="2.22 诗词标签 poem"></a>2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon"><a href="#2-23-阿里图标-icon" class="headerlink" title="2.23 阿里图标 icon"></a>2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow"><a href="#2-24-特效标签wow" class="headerlink" title="2.24 特效标签wow"></a>2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>3.slideInRight动画效果，持续5s，延时5s<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress"><a href="#2-25-进度条-progress" class="headerlink" title="2.25  进度条 progress"></a>2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation"><a href="#2-26-注释-notation" class="headerlink" title="2.26 注释 notation"></a>2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble"><a href="#2-27-气泡注释-bubble" class="headerlink" title="2.27 气泡注释 bubble"></a>2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference"><a href="#2-28-引用文献-reference" class="headerlink" title="2.28 引用文献 reference"></a>2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示"><a href="#2-29-PDF展示" class="headerlink" title="2.29 PDF展示"></a>2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件"><a href="#2-30-Hexo-tag-map-插件" class="headerlink" title="2.30 Hexo-tag-map 插件"></a>2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table></div><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>&lt;/div&gt;<script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块"><a href="#2-31-隐藏块" class="headerlink" title="2.31 隐藏块"></a>2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">🥧本文汇总Markdown格式以及外挂标签在网页端的渲染效果，可作为文档进行查询</summary>
    
    
    
    <category term="演示" scheme="https://bigbearhyl.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="Markdown" scheme="https://bigbearhyl.github.io/tags/Markdown/"/>
    
    <category term="外挂标签" scheme="https://bigbearhyl.github.io/tags/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
